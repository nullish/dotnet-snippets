<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" duration="5050.757284900003" testcasecount="195" total="195" passed="159" failed="27" inconclusive="0" skipped="9" result="Failed" start-time="2024-11-13T19:41:38Z" end-time="2024-11-13T21:05:58Z">
  <test-suite type="Assembly" name="SpecFlowAutomation.Tests.dll" fullname="C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\bin\Debug\net6.0\SpecFlowAutomation.Tests.dll" total="195" passed="159" failed="27" inconclusive="0" skipped="9" result="Failed" start-time="2024-11-13T19:41:41Z" end-time="2024-11-13T21:05:52Z" duration="5050.7572849">
    <test-suite type="TestSuite" name="SpecFlowAutomation" fullname="SpecFlowAutomation" total="195" passed="159" failed="27" inconclusive="0" skipped="9" result="Failed" start-time="2024-11-13T19:41:41Z" end-time="2024-11-13T21:05:52Z" duration="5050.7572849">
      <test-suite type="TestSuite" name="Tests" fullname="SpecFlowAutomation.Tests" total="195" passed="159" failed="27" inconclusive="0" skipped="9" result="Failed" start-time="2024-11-13T19:41:41Z" end-time="2024-11-13T21:05:52Z" duration="5050.7572849">
        <test-suite type="TestSuite" name="Features" fullname="SpecFlowAutomation.Tests.Features" total="195" passed="159" failed="27" inconclusive="0" skipped="9" result="Failed" start-time="2024-11-13T19:41:41Z" end-time="2024-11-13T21:05:52Z" duration="5050.7572849">
          <test-suite type="TestFixture" name="_001_AssetEditorFeature" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature" classname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature" total="28" passed="17" failed="11" inconclusive="0" skipped="0" result="Failed" start-time="2024-11-13T19:41:41Z" end-time="2024-11-13T19:51:59Z" duration="618.1793008">
            <test-case name="_01_UploadAndDeleteAFile" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._01_UploadAndDeleteAFile" methodname="_01_UploadAndDeleteAFile" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:41:41Z" end-time="2024-11-13T19:42:01Z" duration="19.9570979" asserts="0" seed="669550241">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.7s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.3s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "AssetName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("AssetName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "AssetName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AssetName") (0.3s)
And User selects Asset Type as "Private"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Private") (0.3s)
And User selects Records Per Page as "50"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("50") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
Then User should see uploaded file "AssetName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetName") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Version History" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Version History") (0.1s)
And User should see "Generate SAS" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Generate SAS") (0.1s)
And User deletes the uploaded file "AssetName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("AssetName") (1.0s)

]]></output>
            </test-case>
            <test-case name="_02_UploadFileAndVerifyVersionHistory" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._02_UploadFileAndVerifyVersionHistory" methodname="_02_UploadFileAndVerifyVersionHistory" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:42:01Z" end-time="2024-11-13T19:42:22Z" duration="20.777849" asserts="0" seed="465191531">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "AssetName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("AssetName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "AssetName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AssetName") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see uploaded file "AssetName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetName") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Version History" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Version History") (0.1s)
And User should see "Generate SAS" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Generate SAS") (0.1s)
And User clicks on version history
-> done: AssetEditorStepDefinitions.ThenIClickOnVersionHistory() (0.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User could see version history
-> done: AssetEditorStepDefinitions.ThenICouldSeeVersionHistory() (0.0s)
And User should see uploaded file "AssetName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetName") (0.0s)
And User should see text "Version ID"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Version ID") (0.0s)
And User should see text "Is latest version"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Is latest version") (0.0s)
And User should see text "Size"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Size") (0.0s)
And User should see text "File Type"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("File Type") (0.0s)
And User clicks on "Back" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back") (0.1s)
And User deletes the uploaded file "AssetName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("AssetName") (1.0s)

]]></output>
            </test-case>
            <test-case name="_03_UploadFileAndVerifyGenarateSASURIAndInputFieldsReset" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._03_UploadFileAndVerifyGenarateSASURIAndInputFieldsReset" methodname="_03_UploadFileAndVerifyGenarateSASURIAndInputFieldsReset" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:42:22Z" end-time="2024-11-13T19:42:44Z" duration="22.09214" asserts="0" seed="1941002956">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "AssetName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("AssetName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "AssetName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AssetName") (0.3s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.1s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see uploaded file "AssetName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetName") (0.0s)
And User clicks on Generate SAS link
-> done: AssetEditorStepDefinitions.ThenUserClickOnGenerateSASLink() (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on Cancel button
-> done: AssetEditorStepDefinitions.ThenUserClicksOnCancelButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User deletes the uploaded file "AssetName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("AssetName") (1.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And Verify file content at Generate SAS URI
-> done: AssetEditorStepDefinitions.ThenVerifyFileContentAtGenerateSASUri() (0.0s)

]]></output>
            </test-case>
            <test-case name="_04_UploadFileAndRestoreVersion" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._04_UploadFileAndRestoreVersion" methodname="_04_UploadFileAndRestoreVersion" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:42:44Z" end-time="2024-11-13T19:43:08Z" duration="24.555604" asserts="0" seed="288648634">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.2s)
And User uploads a file "AssetName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("AssetName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "AssetName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AssetName") (0.3s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see uploaded file "AssetName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetName") (0.0s)
And User clicks on version history
-> done: AssetEditorStepDefinitions.ThenIClickOnVersionHistory() (0.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User could see version history
-> done: AssetEditorStepDefinitions.ThenICouldSeeVersionHistory() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Restore" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Restore") (0.1s)
And User waits for 4 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(4, "seconds") (4.0s)
And User should see text "The version has been successfully restored"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("The version has b...") (0.0s)
And User clicks on "Back" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back") (0.2s)
And User deletes the uploaded file "AssetName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("AssetName") (1.0s)

]]></output>
            </test-case>
            <test-case name="_05_GenarateSASURI" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._05_GenarateSASURI" methodname="_05_GenarateSASURI" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:43:08Z" end-time="2024-11-13T19:43:44Z" duration="35.910666" asserts="0" seed="1056197659">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.4s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.2s)
And User uploads a file "AssetName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("AssetName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "AssetName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AssetName") (0.3s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.1s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see uploaded file "AssetName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetName") (0.0s)
And User clicks on Generate SAS link
-> done: AssetEditorStepDefinitions.ThenUserClickOnGenerateSASLink() (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on Copy to Clipboard button
-> done: AssetEditorStepDefinitions.ThenUserClicksOnCopyToClipboardButton() (0.1s)
And User copied Generate SAS URI "AssetName"
-> done: BrowsePoliciesStepDefinitions.ThenUserCopiedGenerateSASUri("AssetName") (0.1s)
And User clicks on Cancel button
-> done: AssetEditorStepDefinitions.ThenUserClicksOnCancelButton() (0.0s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
And User enters SasPath Url
-> done: BrowsePoliciesStepDefinitions.ThenUserEntersSasPathUrl() (1.3s)
And User should see content "001AutomationAssetTestPrivate"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("001AutomationAsse...") (2.0s)
And Verify file content at Generate SAS URI
-> done: AssetEditorStepDefinitions.ThenVerifyFileContentAtGenerateSASUri() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Given User navigates to "ExistingVICTOR" Url
Url not found
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("ExistingVICTOR") (1.2s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User deletes the uploaded file "AssetName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("AssetName") (1.0s)

]]></output>
            </test-case>
            <test-case name="_06_UploadAndDeleteAPublicFile" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._06_UploadAndDeleteAPublicFile" methodname="_06_UploadAndDeleteAPublicFile" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:43:44Z" end-time="2024-11-13T19:44:18Z" duration="33.87212" asserts="0" seed="308438201">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "AssetNamePublic"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("AssetNamePublic") (1.1s)
And User selects as public file
-> done: AssetEditorStepDefinitions.GivenUserSelectAsPublicFile() (0.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "AssetNamePublic"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AssetNamePublic") (0.3s)
And User selects Asset Type as "Public"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Public") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see uploaded file "AssetNamePublic" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("AssetNamePublic") (0.0s)
And User should see "Version History" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Version History") (0.1s)
And User should see "Generate Link" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Generate Link") (0.0s)
And User clicks on Generate Link
-> done: AssetEditorStepDefinitions.ThenUserClickOnGenerateLink() (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on Copy to Clipboard button
-> done: AssetEditorStepDefinitions.ThenUserClicksOnCopyToClipboardButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User copied Generate SAS URI "AssetNamePublic"
-> done: BrowsePoliciesStepDefinitions.ThenUserCopiedGenerateSASUri("AssetNamePublic") (0.1s)
And User clicks on Cancel button
-> done: AssetEditorStepDefinitions.ThenUserClicksOnCancelButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User enters SasPath Url
-> done: BrowsePoliciesStepDefinitions.ThenUserEntersSasPathUrl() (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see content "ZzzAutomationAssetTestPublic Version1"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("ZzzAutomationAsse...") (2.0s)
And Verify file content at Generate SAS URI
-> done: AssetEditorStepDefinitions.ThenVerifyFileContentAtGenerateSASUri() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Given User navigates to "ExistingVICTOR" Url
Url not found
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("ExistingVICTOR") (1.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User deletes the uploaded file "AssetNamePublic"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("AssetNamePublic") (1.0s)

]]></output>
            </test-case>
            <test-case name="_07_UploadJPGFile" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._07_UploadJPGFile" methodname="_07_UploadJPGFile" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:44:18Z" end-time="2024-11-13T19:44:36Z" duration="18.400319" asserts="0" seed="1743665888">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "IconName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("IconName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.2s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "IconName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("IconName") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "100"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("100") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
Then User should see uploaded file "IconName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("IconName") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Version History" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Version History") (0.1s)
And User should see "Generate SAS" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Generate SAS") (0.1s)
And User deletes the uploaded file "IconName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("IconName") (1.0s)

]]></output>
            </test-case>
            <test-case name="_08_UploadMSIFile" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._08_UploadMSIFile" methodname="_08_UploadMSIFile" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:44:36Z" end-time="2024-11-13T19:44:55Z" duration="19.052133" asserts="0" seed="1876663970">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back To List" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Back To List"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (1.1s)
And User enters Search Criteria as "InputFile"
-> skipped because of previous errors
And User selects Asset Type as "Private"
-> skipped because of previous errors
And User selects Records Per Page as "20"
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on Filter Button
-> skipped because of previous errors
Then User should see uploaded file "InputFile" in Asset editor
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see "Version History" link
-> skipped because of previous errors
And User should see "Generate SAS" link
-> skipped because of previous errors
And User deletes the uploaded file "InputFile"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Back To List"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._08_UploadMSIFile() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 215</stack-trace>
              </failure>
            </test-case>
            <test-case name="_09_UploadPNGFile" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._09_UploadPNGFile" methodname="_09_UploadPNGFile" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:44:55Z" end-time="2024-11-13T19:45:14Z" duration="18.5542969" asserts="0" seed="285253051">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "PngName"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("PngName") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
And User enters Search Criteria as "PngName"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("PngName") (0.2s)
And User selects Asset Type as "Private"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Private") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
Then User should see uploaded file "PngName" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("PngName") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Version History" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Version History") (0.1s)
And User should see "Generate SAS" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Generate SAS") (0.1s)
And User deletes the uploaded file "PngName"
-> done: AssetEditorStepDefinitions.ThenIDeleteTheUploadedFile("PngName") (1.0s)

]]></output>
            </test-case>
            <test-case name="_10_UploadEXEFile" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._10_UploadEXEFile" methodname="_10_UploadEXEFile" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:45:14Z" end-time="2024-11-13T19:45:28Z" duration="14.040258" asserts="0" seed="1777878271">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.2s)
And User uploads a file "ExeName"
-> error: invalid argument: File not found : C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\bin\Debug\net6.0\\TestData\AssetFiles\Version1\VisualStudioSetup.exe
  (Session info: MicrosoftEdge=130.0.2849.80) (1.1s)
And User enters upload comment as "Asset Name comments"
-> skipped because of previous errors
When User clicks on "File Upload" button
-> skipped because of previous errors
And User waits for 10 "seconds"
-> skipped because of previous errors
When User clicks on "Back to List" link
-> skipped because of previous errors
And User enters Search Criteria as "ExeName"
-> skipped because of previous errors
And User selects Asset Type as "Private"
-> skipped because of previous errors
And User selects Records Per Page as "20"
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on Filter Button
-> skipped because of previous errors
Then User should see uploaded file "ExeName" in Asset editor
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see "Version History" link
-> skipped because of previous errors
And User should see "Generate SAS" link
-> skipped because of previous errors
And User deletes the uploaded file "ExeName"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.WebDriverArgumentException : invalid argument: File not found : C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\bin\Debug\net6.0\\TestData\AssetFiles\Version1\VisualStudioSetup.exe
  (Session info: MicrosoftEdge=130.0.2849.80)</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebElement.SendKeys(String text)
   at SpecFlowAutomation.Tests.Pages.BasePage.FileUpload(IWebElement webElement, String fileUploadPath) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 62
   at SpecFlowAutomation.Tests.Pages.AssetEditorPage.UploadFile(String filePath) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\AssetEditorPage.cs:line 105
   at SpecFlowAutomation.Tests.StepDefinitions.AssetEditorStepDefinitions.GivenUserUploadAFile(String fileName) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\AssetEditorStepDefinitions.cs:line 53
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._10_UploadEXEFile() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 257</stack-trace>
              </failure>
            </test-case>
            <test-case name="_11_FilterAssetEditor(&quot;All&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(&quot;All&quot;,&quot;10&quot;,null)" methodname="_11_FilterAssetEditor(&quot;All&quot;,&quot;10&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:45:28Z" end-time="2024-11-13T19:45:43Z" duration="15.129143" asserts="0" seed="1836445796">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.3s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.1s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "10"
-> error:   Expected string length 2 but was 1. Strings differ at index 0.
  Expected: "10"
  But was:  "2"
  -----------^
 (0.1s)

]]></output>
              <failure>
                <message>  Expected string length 2 but was 1. Strings differ at index 0.
  Expected: "10"
  But was:  "2"
  -----------^
</message>
                <stack-trace>   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs(String numOfRecords) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 495
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 269
</stack-trace>
              </failure>
            </test-case>
            <test-case name="_11_FilterAssetEditor(&quot;Private&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(&quot;Private&quot;,&quot;20&quot;,null)" methodname="_11_FilterAssetEditor(&quot;Private&quot;,&quot;20&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:45:43Z" end-time="2024-11-13T19:45:58Z" duration="14.919501" asserts="0" seed="215406887">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "Private"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Private") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "20"
-> error:   Expected string length 2 but was 1. Strings differ at index 1.
  Expected: "20"
  But was:  "2"
  ------------^
 (0.1s)

]]></output>
              <failure>
                <message>  Expected string length 2 but was 1. Strings differ at index 1.
  Expected: "20"
  But was:  "2"
  ------------^
</message>
                <stack-trace>   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs(String numOfRecords) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 495
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 269
</stack-trace>
              </failure>
            </test-case>
            <test-case name="_11_FilterAssetEditor(&quot;Public&quot;,&quot;50&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(&quot;Public&quot;,&quot;50&quot;,null)" methodname="_11_FilterAssetEditor(&quot;Public&quot;,&quot;50&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:45:58Z" end-time="2024-11-13T19:46:23Z" duration="24.771497" asserts="0" seed="221816323">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "Public"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Public") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "50"
-> error: no such element: Unable to locate element: {"method":"css selector","selector":"#sortableTable"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"css selector","selector":"#sortableTable"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BrowsePoliciesPage.CheckNumOfRecords() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BrowsePoliciesPage.cs:line 155
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs(String numOfRecords) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 495
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 269</stack-trace>
              </failure>
            </test-case>
            <test-case name="_11_FilterAssetEditor(&quot;All&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(&quot;All&quot;,&quot;100&quot;,null)" methodname="_11_FilterAssetEditor(&quot;All&quot;,&quot;100&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:46:23Z" end-time="2024-11-13T19:46:37Z" duration="14.173075" asserts="0" seed="360764051">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.7s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.1s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "100"
-> error:   Expected string length 3 but was 1. Strings differ at index 0.
  Expected: "100"
  But was:  "2"
  -----------^
 (0.0s)

]]></output>
              <failure>
                <message>  Expected string length 3 but was 1. Strings differ at index 0.
  Expected: "100"
  But was:  "2"
  -----------^
</message>
                <stack-trace>   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs(String numOfRecords) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 495
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 269
</stack-trace>
              </failure>
            </test-case>
            <test-case name="_11_FilterAssetEditor(&quot;Private&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(&quot;Private&quot;,&quot;20&quot;,null)" methodname="_11_FilterAssetEditor(&quot;Private&quot;,&quot;20&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:46:37Z" end-time="2024-11-13T19:47:08Z" duration="30.752031" asserts="0" seed="929390289">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (25.0s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "Private"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Private") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "20"
-> error:   Expected string length 2 but was 1. Strings differ at index 1.
  Expected: "20"
  But was:  "2"
  ------------^
 (0.1s)

]]></output>
              <failure>
                <message>  Expected string length 2 but was 1. Strings differ at index 1.
  Expected: "20"
  But was:  "2"
  ------------^
</message>
                <stack-trace>   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs(String numOfRecords) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 495
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 269
</stack-trace>
              </failure>
            </test-case>
            <test-case name="_11_FilterAssetEditor(&quot;Public&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(&quot;Public&quot;,&quot;10&quot;,null)" methodname="_11_FilterAssetEditor(&quot;Public&quot;,&quot;10&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:47:08Z" end-time="2024-11-13T19:47:33Z" duration="24.7127" asserts="0" seed="1252817990">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "Public"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Public") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "10"
-> error: no such element: Unable to locate element: {"method":"css selector","selector":"#sortableTable"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"css selector","selector":"#sortableTable"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BrowsePoliciesPage.CheckNumOfRecords() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BrowsePoliciesPage.cs:line 155
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs(String numOfRecords) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 495
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._11_FilterAssetEditor(String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 269</stack-trace>
              </failure>
            </test-case>
            <test-case name="_12_ResetAssetEditor(&quot;All&quot;,&quot;2&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._12_ResetAssetEditor(&quot;All&quot;,&quot;2&quot;,null)" methodname="_12_ResetAssetEditor(&quot;All&quot;,&quot;2&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:47:33Z" end-time="2024-11-13T19:47:48Z" duration="15.879475" asserts="0" seed="609805874">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("2") (0.0s)
When User clicks on Reset Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnResetButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Search Criteria cleared
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeSearchCriteriaCleared() (0.0s)
And User should see dropdown Asset Type as "All"
All
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownAssetTypeAs("All") (0.1s)
And User should see dropdown Records Per Page as "10"
10
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownRecordsPerPageAs("10") (0.1s)

]]></output>
            </test-case>
            <test-case name="_13_SortingOrderByPath(&quot;All&quot;,&quot;2&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._13_SortingOrderByPath(&quot;All&quot;,&quot;2&quot;,null)" methodname="_13_SortingOrderByPath(&quot;All&quot;,&quot;2&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:47:48Z" end-time="2024-11-13T19:48:06Z" duration="17.168781" asserts="0" seed="1698303598">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.2s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("2") (0.0s)
And User should see policies sort by "Path" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("Path") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Path" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Path") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "Path" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("Path") (0.1s)

]]></output>
            </test-case>
            <test-case name="_14_SortingOrderBySize(&quot;All&quot;,&quot;2&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._14_SortingOrderBySize(&quot;All&quot;,&quot;2&quot;,null)" methodname="_14_SortingOrderBySize(&quot;All&quot;,&quot;2&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:48:06Z" end-time="2024-11-13T19:48:23Z" duration="17.891848" asserts="0" seed="1774601060">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User should see policies sort by "Size" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("Size") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Size" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Size") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "Size" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("Size") (0.1s)

]]></output>
            </test-case>
            <test-case name="_15_SortingOrderByType(&quot;All&quot;,&quot;2&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._15_SortingOrderByType(&quot;All&quot;,&quot;2&quot;,null)" methodname="_15_SortingOrderByType(&quot;All&quot;,&quot;2&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:48:23Z" end-time="2024-11-13T19:48:42Z" duration="18.074201" asserts="0" seed="639946744">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User should see policies sort by "Type" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("Type") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Type" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Type") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "Type" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("Type") (0.1s)

]]></output>
            </test-case>
            <test-case name="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;All&quot;,&quot;50&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;All&quot;,&quot;50&quot;,null)" methodname="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;All&quot;,&quot;50&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:48:42Z" end-time="2024-11-13T19:48:57Z" duration="15.904213" asserts="0" seed="352481817">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as "Z"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Z") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.1s)
And User selects Records Per Page as "50"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("50") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("2") (0.0s)
And User should not see new search for "Z"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("Z") (0.1s)

]]></output>
            </test-case>
            <test-case name="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;All&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;All&quot;,&quot;20&quot;,null)" methodname="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;All&quot;,&quot;20&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:48:57Z" end-time="2024-11-13T19:49:13Z" duration="15.678644" asserts="0" seed="1989298762">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as "ZZ"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("ZZ") (0.3s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("2") (0.1s)
And User should not see new search for "ZZ"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("ZZ") (0.1s)

]]></output>
            </test-case>
            <test-case name="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;All&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;All&quot;,&quot;100&quot;,null)" methodname="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;All&quot;,&quot;100&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:49:13Z" end-time="2024-11-13T19:49:29Z" duration="15.744369" asserts="0" seed="713973464">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as "Q1"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Q1") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "100"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("100") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("2") (0.1s)
And User should not see new search for "Q1"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("Q1") (0.1s)

]]></output>
            </test-case>
            <test-case name="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;All&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;All&quot;,&quot;100&quot;,null)" methodname="_16_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;All&quot;,&quot;100&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:49:29Z" end-time="2024-11-13T19:49:45Z" duration="15.990606" asserts="0" seed="1722720231">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as "Z2"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Z2") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "100"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("100") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("2") (0.1s)
And User should not see new search for "Z2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("Z2") (0.1s)

]]></output>
            </test-case>
            <test-case name="_17_ResultsMatchSearchCriteria(&quot;Capture&quot;,&quot;All&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._17_ResultsMatchSearchCriteria(&quot;Capture&quot;,&quot;All&quot;,&quot;10&quot;,null)" methodname="_17_ResultsMatchSearchCriteria(&quot;Capture&quot;,&quot;All&quot;,&quot;10&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:49:45Z" end-time="2024-11-13T19:50:17Z" duration="32.335295" asserts="0" seed="11798384">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as "Capture"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Capture") (0.2s)
And User selects Asset Type as "<Asset Type>"
-> error: Cannot locate element with text: <Asset Type>; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (20.1s)
And User selects Records Per Page as "10"
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on Filter Button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see results with "Capture"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : Cannot locate element with text: &lt;Asset Type&gt;; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.Support.UI.SelectElement.SelectByText(String text, Boolean partialMatch)
   at SpecFlowAutomation.Tests.Pages.BasePage.SelectByText(IWebElement webElement, String text) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 50
   at SpecFlowAutomation.Tests.Pages.BrowsePoliciesPage.SelectAssetType(String assetType) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BrowsePoliciesPage.cs:line 144
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs(String assetType) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 471
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._17_ResultsMatchSearchCriteria(String searchTerm, String selectState, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 386</stack-trace>
              </failure>
            </test-case>
            <test-case name="_18_VerifyPreviousNextPageNumberLinksInPagination(&quot;Capture&quot;,&quot;All&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._18_VerifyPreviousNextPageNumberLinksInPagination(&quot;Capture&quot;,&quot;All&quot;,&quot;10&quot;,null)" methodname="_18_VerifyPreviousNextPageNumberLinksInPagination(&quot;Capture&quot;,&quot;All&quot;,&quot;10&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:50:17Z" end-time="2024-11-13T19:50:42Z" duration="25.007238" asserts="0" seed="1806396868">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as "Capture"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Capture") (0.2s)
And User selects Asset Type as "All"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("All") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Previous" link disabled
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Previous"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
And User clicks on "2" link
-> skipped because of previous errors
And User should see "Previous" link enabled
-> skipped because of previous errors
And User clicks on "Next" link
-> skipped because of previous errors
And User should see "Next" link disabled
-> skipped because of previous errors
And User clicks on "Previous" link
-> skipped because of previous errors
And User should see "Next" link enabled
-> skipped because of previous errors
And User clicks on "1" link
-> skipped because of previous errors
And User should see "Previous" link disabled
-> skipped because of previous errors
And User clicks on "3" link
-> skipped because of previous errors
And User should see "Next" link disabled
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Previous"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.IsWebElementVisbleByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 71
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.ThenUserShouldSeeLinkDisabled(String link) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 587
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._18_VerifyPreviousNextPageNumberLinksInPagination(String searchTerm, String assetType, String noOfRecords, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 411</stack-trace>
              </failure>
            </test-case>
            <test-case name="_19_AssetTypes(&quot;Public&quot;,&quot;10&quot;,&quot;public&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._19_AssetTypes(&quot;Public&quot;,&quot;10&quot;,&quot;public&quot;,null)" methodname="_19_AssetTypes(&quot;Public&quot;,&quot;10&quot;,&quot;public&quot;,null)" classname="_001_AssetEditorFeature" result="Failed" start-time="2024-11-13T19:50:42Z" end-time="2024-11-13T19:51:25Z" duration="42.475615" asserts="0" seed="1507269696">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "Public"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Public") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.1s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
And User should see dropdown Asset Type as "Public"
Public
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownAssetTypeAs("Public") (0.2s)
And User should see results with Asset Type as "public"
-> error: no such element: Unable to locate element: {"method":"css selector","selector":"#sortableTable"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"css selector","selector":"#sortableTable"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BrowsePoliciesPage.GetList(String orderItem) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BrowsePoliciesPage.cs:line 210
   at SpecFlowAutomation.Tests.Pages.BrowsePoliciesPage.VerifyAssetType(String type) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BrowsePoliciesPage.cs:line 181
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.WhenUserShouldSeeResultsWithAssetTypeAs(String type) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 795
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Allure.SpecFlowPlugin.SelectiveRun.SelectiveRunTestRunner.CollectScenarioErrors()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._19_AssetTypes(String assetType, String noOfRecords, String asset, String[] exampleTags) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\AssetEditor.feature:line 427</stack-trace>
              </failure>
            </test-case>
            <test-case name="_19_AssetTypes(&quot;Private&quot;,&quot;10&quot;,&quot;private&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._001_AssetEditorFeature._19_AssetTypes(&quot;Private&quot;,&quot;10&quot;,&quot;private&quot;,null)" methodname="_19_AssetTypes(&quot;Private&quot;,&quot;10&quot;,&quot;private&quot;,null)" classname="_001_AssetEditorFeature" result="Passed" start-time="2024-11-13T19:51:25Z" end-time="2024-11-13T19:51:59Z" duration="34.358585" asserts="0" seed="563939715">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.0s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.3s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.4s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects Asset Type as "Private"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectsAssetTypeAs("Private") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.2s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
And User should see dropdown Asset Type as "Private"
Private
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownAssetTypeAs("Private") (0.2s)
And User should see results with Asset Type as "private"
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeResultsWithAssetTypeAs("private") (0.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_002_ManageRolesFeature" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature" classname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature" total="8" passed="8" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T19:51:59Z" end-time="2024-11-13T19:55:02Z" duration="182.705237">
            <test-case name="_01_GlobalReader" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._01_GlobalReader" methodname="_01_GlobalReader" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:51:59Z" end-time="2024-11-13T19:52:22Z" duration="23.312594" asserts="0" seed="63487634">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User should see text "Manage Roles"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Manage Roles") (0.0s)
And User should see text "Manage membership of VICTOR role groups"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Manage membership...") (0.0s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.2s)
When User clicks on "Global Reader" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Global Reader") (1.7s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "Global Reader" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Global Reader") (0.0s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_02_PolicyContributor" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._02_PolicyContributor" methodname="_02_PolicyContributor" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:52:22Z" end-time="2024-11-13T19:52:44Z" duration="21.37258" asserts="0" seed="1304814258">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.1s)
When User clicks on "Policy Contributor" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Policy Contributor") (0.4s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "Policy Contributor" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Policy Contributor") (0.0s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_03_PolicyPromoter" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._03_PolicyPromoter" methodname="_03_PolicyPromoter" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:52:44Z" end-time="2024-11-13T19:53:05Z" duration="21.742598" asserts="0" seed="824262781">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.1s)
When User clicks on "Policy Promoter" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Policy Promoter") (0.4s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "Policy Promoter" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Policy Promoter") (0.0s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_04_EMSLContributor" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._04_EMSLContributor" methodname="_04_EMSLContributor" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:53:05Z" end-time="2024-11-13T19:53:34Z" duration="28.18424" asserts="0" seed="357808292">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (15.5s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.1s)
When User clicks on "EMSL Contributor" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("EMSL Contributor") (0.4s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "EMSL Contributor" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("EMSL Contributor") (0.1s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_05_USBDeviceControlsContributor" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._05_USBDeviceControlsContributor" methodname="_05_USBDeviceControlsContributor" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:53:34Z" end-time="2024-11-13T19:53:56Z" duration="22.357663" asserts="0" seed="1651448880">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.6s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.2s)
When User clicks on "USB Device Controls Contributor" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("USB Device Contro...") (0.4s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "USB Device Controls Contributor" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("USB Device Contro...") (0.1s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_06_AssetsContributor" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._06_AssetsContributor" methodname="_06_AssetsContributor" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:53:56Z" end-time="2024-11-13T19:54:18Z" duration="22.07757" asserts="0" seed="1773998251">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.1s)
When User clicks on "Assets Contributor" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Assets Contributor") (0.5s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "Assets Contributor" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Assets Contributor") (0.1s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_07_VICTORContributor" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._07_VICTORContributor" methodname="_07_VICTORContributor" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:54:18Z" end-time="2024-11-13T19:54:40Z" duration="21.973543" asserts="0" seed="489015150">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.1s)
When User clicks on "VICTOR Contributor" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("VICTOR Contributor") (0.4s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "VICTOR Contributor" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("VICTOR Contributor") (0.1s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
            <test-case name="_08_PolicyApprover" fullname="SpecFlowAutomation.Tests.Features._002_ManageRolesFeature._08_PolicyApprover" methodname="_08_PolicyApprover" classname="_002_ManageRolesFeature" result="Passed" start-time="2024-11-13T19:54:40Z" end-time="2024-11-13T19:55:02Z" duration="21.684449" asserts="0" seed="166747082">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Manage Roles" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Manage Roles") (0.1s)
When User clicks on "Policy Approver" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Policy Approver") (0.4s)
Then User should see "Manage Role" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Manage Role") (0.0s)
And User should see "Policy Approver" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Policy Approver") (0.0s)
And User enters "clark" in search user field
-> done: CreatePoliciesStepDefinitions.ThenUserEntersInSearchUserField("clark") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Add" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Add") (0.1s)
When User clicks on "Add" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Add") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Clark Kent") (2.0s)
Then User should see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("clark.kent@devl.j...") (2.0s)
And User should see "Delete" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Delete") (0.1s)
When User clicks on "Delete" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should not see name "Clark Kent"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("Clark Kent") (1.0s)
And User should not see email address "clark.kent@devl.justice.gov.uk"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeApp("clark.kent@devl.j...") (1.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_004_EmslEditorFeature" fullname="SpecFlowAutomation.Tests.Features._004_EmslEditorFeature" classname="SpecFlowAutomation.Tests.Features._004_EmslEditorFeature" total="4" passed="0" failed="4" inconclusive="0" skipped="0" result="Failed" start-time="2024-11-13T19:55:02Z" end-time="2024-11-13T19:56:37Z" duration="94.741622">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._1_Create" methodname="_1_Create" classname="_004_EmslEditorFeature" result="Failed" start-time="2024-11-13T19:55:02Z" end-time="2024-11-13T19:55:25Z" duration="23.144384" asserts="0" seed="2065386621">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
When User clicks on "EMSL Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("EMSL Editor") (1.0s)
Then User should see "Enterprise Mode Site List" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Enterprise Mode S...") (0.0s)
And User should see Public URL as "/emsl/devl/sites.xml"
-> done: EmslEditorStepDefinitions.ThenUserShouldSeePublicURLAs("/emsl/devl/sites.xml") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out Enterprise Mode Site List" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit Enterprise Mode Site List" page
-> skipped because of previous errors
And User enters Url value as "*.AutomationUrl.com"
-> skipped because of previous errors
And User selects Compatibility mode as "default"
-> skipped because of previous errors
And User selects Open in as "Edge"
-> skipped because of previous errors
And User checks Allow redirect checkbox
-> skipped because of previous errors
And User checks Environments devl checkbox
-> skipped because of previous errors
When User clicks on EMSL "Add" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Url "*.AutomationUrl.com"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Url "*.AutomationUrl.com"
-> skipped because of previous errors
And User should see Public URL as "/emsl/devl/sites.xml"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects EMSL target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
Then User should see Url "*.AutomationUrl.com"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up EMSL history
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._1_Create() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\EmslEditor.feature:line 41</stack-trace>
              </failure>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._2_Edit" methodname="_2_Edit" classname="_004_EmslEditorFeature" result="Failed" start-time="2024-11-13T19:55:25Z" end-time="2024-11-13T19:55:51Z" duration="25.874061" asserts="0" seed="1389286020">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (12.1s)
When User clicks on "EMSL Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("EMSL Editor") (0.8s)
Then User should see "Enterprise Mode Site List" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Enterprise Mode S...") (0.0s)
And User should see Public URL as "/emsl/devl/sites.xml"
-> done: EmslEditorStepDefinitions.ThenUserShouldSeePublicURLAs("/emsl/devl/sites.xml") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
Then User should see "Check out Enterprise Mode Site List" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit Enterprise Mode Site List" page
-> skipped because of previous errors
And User clicks on EMSL "Edit" button
-> skipped because of previous errors
And User enters Url value as "*.Automation.com"
-> skipped because of previous errors
And User clicks on EMSL "Save" button
-> skipped because of previous errors
Then User should see Url "*.Automation.com"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Url "*.Automation.com"
-> skipped because of previous errors
And User should see Public URL as "/emsl/devl/sites.xml"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects EMSL target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
Then User should see Url "*.Automation.com"
-> skipped because of previous errors
And User waits for 20 "seconds"
-> skipped because of previous errors
And User clicks on "/emsl/devl/sites.xml" partial link
-> skipped because of previous errors
And User waits for 6 "seconds"
-> skipped because of previous errors
And User clicks on "https://moj-official" partial link
-> skipped because of previous errors
And User enters "https://moj-official" Url
-> skipped because of previous errors
And User should see url "*.Automation.com"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._2_Edit() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\EmslEditor.feature:line 67</stack-trace>
              </failure>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._3_Delete" methodname="_3_Delete" classname="_004_EmslEditorFeature" result="Failed" start-time="2024-11-13T19:55:51Z" end-time="2024-11-13T19:56:13Z" duration="22.314543" asserts="0" seed="1910509376">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
When User clicks on "EMSL Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("EMSL Editor") (0.4s)
Then User should see "Enterprise Mode Site List" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Enterprise Mode S...") (0.0s)
And User should see Public URL as "/emsl/devl/sites.xml"
-> done: EmslEditorStepDefinitions.ThenUserShouldSeePublicURLAs("/emsl/devl/sites.xml") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
Then User should see "Check out Enterprise Mode Site List" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit Enterprise Mode Site List" page
-> skipped because of previous errors
And User clicks on EMSL "Delete" button
-> skipped because of previous errors
And User clicks on EMSL "Confirm" button
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects EMSL target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up EMSL history
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._3_Delete() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\EmslEditor.feature:line 85</stack-trace>
              </failure>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._4_Discard" methodname="_4_Discard" classname="_004_EmslEditorFeature" result="Failed" start-time="2024-11-13T19:56:13Z" end-time="2024-11-13T19:56:37Z" duration="23.408634" asserts="0" seed="1654155250">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.2s)
When User clicks on "EMSL Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("EMSL Editor") (0.6s)
Then User should see "Enterprise Mode Site List" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Enterprise Mode S...") (0.0s)
And User should see Public URL as "/emsl/devl/sites.xml"
-> done: EmslEditorStepDefinitions.ThenUserShouldSeePublicURLAs("/emsl/devl/sites.xml") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
Then User should see "Check out Enterprise Mode Site List" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit Enterprise Mode Site List" page
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Discard" link
-> skipped because of previous errors
When User clicks on "Discard" button
-> skipped because of previous errors
Then User should see Public URL as "/emsl/devl/sites.xml"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._004_EmslEditorFeature._4_Discard() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\EmslEditor.feature:line 92</stack-trace>
              </failure>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_005_ValidationRulesForApplicationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._005_ValidationRulesForApplicationIOSFeature" classname="SpecFlowAutomation.Tests.Features._005_ValidationRulesForApplicationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T19:56:37Z" end-time="2024-11-13T19:57:47Z" duration="70.4569409">
            <test-case name="_1_ValidationRulesForIOSApplication" fullname="SpecFlowAutomation.Tests.Features._005_ValidationRulesForApplicationIOSFeature._1_ValidationRulesForIOSApplication" methodname="_1_ValidationRulesForIOSApplication" classname="_005_ValidationRulesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T19:56:37Z" end-time="2024-11-13T19:57:27Z" duration="50.6382509" asserts="0" seed="1230516880">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.6s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.2s)
When User clicks on "iOS VPP App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS VPP App") (0.8s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.3s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVE FAILED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVE FAILED") (10.1s)
And User should see validation message "The 'policy.bundleId' property is required"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.bundl...") (0.0s)
And User should see validation message "The 'policy.displayName' property is required"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.displ...") (0.0s)
When User enters policy details in Json Editor for "IOSApplications" without "displayName"
-> done: BrowsePoliciesStepDefinitions.WhenUserEntersPolicyDetailsInJsonEditorWithout(IOSApplications, displayName) (7.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see validation message "The 'policy.displayName' property is required"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.displ...") (0.0s)
And User should not see validation message "The 'policy.bundleId' property is required"
-> done: CreatePoliciesStepDefinitions.WhenUserShouldNotSeeValidationMessage("The 'policy.bundl...") (0.0s)
When User enters policy details in Json Editor for "IOSApplications" without "bundleId"
-> done: BrowsePoliciesStepDefinitions.WhenUserEntersPolicyDetailsInJsonEditorWithout(IOSApplications, bundleId) (7.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see validation message "The 'policy.bundleId' property is required"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.bundl...") (0.0s)
And User should not see validation message "The 'policy.displayName' property is required"
-> done: CreatePoliciesStepDefinitions.WhenUserShouldNotSeeValidationMessage("The 'policy.displ...") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._005_ValidationRulesForApplicationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_005_ValidationRulesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T19:57:27Z" end-time="2024-11-13T19:57:47Z" duration="19.81869" asserts="0" seed="836586035">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.4s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.8s)
When User clicks on "applications/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/ios", "AUTOMATION Policy") (3.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.3s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_006_ValidationRulesForApplicationWebAppFeature" fullname="SpecFlowAutomation.Tests.Features._006_ValidationRulesForApplicationWebAppFeature" classname="SpecFlowAutomation.Tests.Features._006_ValidationRulesForApplicationWebAppFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T19:57:47Z" end-time="2024-11-13T19:58:52Z" duration="64.532333">
            <test-case name="_1_ValidationRulesForWebAppApplication" fullname="SpecFlowAutomation.Tests.Features._006_ValidationRulesForApplicationWebAppFeature._1_ValidationRulesForWebAppApplication" methodname="_1_ValidationRulesForWebAppApplication" classname="_006_ValidationRulesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T19:57:47Z" end-time="2024-11-13T19:58:31Z" duration="43.870638" asserts="0" seed="1777582053">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (0.2s)
When User clicks on Sub Section WebApp
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnSubSectionWebApp() (0.3s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVE FAILED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVE FAILED") (10.1s)
And User should see validation message "The 'policy.appUrl' property should be set to a valid URL"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.appUr...") (0.0s)
And User should see validation message "The 'policy.displayName' property is required"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.displ...") (0.0s)
When User enters policy details in Json Editor for "WebAppApplications" without "displayName"
-> done: BrowsePoliciesStepDefinitions.WhenUserEntersPolicyDetailsInJsonEditorWithout(WebAppApplications, displayName) (4.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see validation message "The 'policy.displayName' property is required"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.displ...") (0.0s)
And User should not see validation message "The 'policy.appUrl' property should be set to a valid URL"
-> done: CreatePoliciesStepDefinitions.WhenUserShouldNotSeeValidationMessage("The 'policy.appUr...") (0.0s)
When User enters policy details in Json Editor for "WebAppApplications" without "appUrl"
-> done: BrowsePoliciesStepDefinitions.WhenUserEntersPolicyDetailsInJsonEditorWithout(WebAppApplications, appUrl) (4.5s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see validation message "The 'policy.appUrl' property should be set to a valid URL"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeValidationMessage("The 'policy.appUr...") (0.0s)
And User should not see validation message "The 'policy.displayName' property is required"
-> done: CreatePoliciesStepDefinitions.WhenUserShouldNotSeeValidationMessage("The 'policy.displ...") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._006_ValidationRulesForApplicationWebAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_006_ValidationRulesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T19:58:31Z" end-time="2024-11-13T19:58:52Z" duration="20.661695" asserts="0" seed="73955606">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.7s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (3.5s)
When User clicks on "applications/webapp" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/webapp", "AUTOMATION Policy") (3.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_008_ValidationRulesForPolicyNameFeature" fullname="SpecFlowAutomation.Tests.Features._008_ValidationRulesForPolicyNameFeature" classname="SpecFlowAutomation.Tests.Features._008_ValidationRulesForPolicyNameFeature" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T19:58:52Z" end-time="2024-11-13T19:59:06Z" duration="14.429054">
            <test-case name="_1_ValidationRulesForPolicyName" fullname="SpecFlowAutomation.Tests.Features._008_ValidationRulesForPolicyNameFeature._1_ValidationRulesForPolicyName" methodname="_1_ValidationRulesForPolicyName" classname="_008_ValidationRulesForPolicyNameFeature" result="Passed" start-time="2024-11-13T19:58:52Z" end-time="2024-11-13T19:59:06Z" duration="14.429054" asserts="0" seed="1772909977">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.5s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.2s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (0.2s)
When User clicks on "Windows 10 and later" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10 and later") (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.1s)
Then User should see error message "Policy name is required"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeErrorMessage("Policy name is re...") (0.3s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" fullname="SpecFlowAutomation.Tests.Features._009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" classname="SpecFlowAutomation.Tests.Features._009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T19:59:06Z" end-time="2024-11-13T20:00:10Z" duration="63.553101">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T19:59:06Z" end-time="2024-11-13T19:59:50Z" duration="43.697083" asserts="0" seed="920998886">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.2s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (0.1s)
When User clicks on "Windows 10 and later" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10 and later") (0.1s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.3s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsAdministrativeTemplates"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsAdministra...) (1.9s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.6s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_009_CreateAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T19:59:50Z" end-time="2024-11-13T20:00:10Z" duration="19.856018" asserts="0" seed="1847895443">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.7s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "administrativetemplates/windows" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("administrativetem...", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.3s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature" classname="SpecFlowAutomation.Tests.Features._010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:00:10Z" end-time="2024-11-13T20:01:20Z" duration="70.135714">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:00:10Z" end-time="2024-11-13T20:01:00Z" duration="50.353565" asserts="0" seed="1698012160">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.3s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.1s)
When User clicks on "iOS VPP App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS VPP App") (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.7s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSApplications) (5.3s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.0s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.9s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.6s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_010_CreateAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:01:00Z" end-time="2024-11-13T20:01:20Z" duration="19.782149" asserts="0" seed="1815661534">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.8s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "applications/ios" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("applications/ios", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (1.1s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature" fullname="SpecFlowAutomation.Tests.Features._011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature" classname="SpecFlowAutomation.Tests.Features._011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:01:20Z" end-time="2024-11-13T20:02:35Z" duration="75.660776">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:01:20Z" end-time="2024-11-13T20:02:13Z" duration="53.514774" asserts="0" seed="1738952403">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (0.1s)
When User clicks on Sub Section WebApp
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnSubSectionWebApp() (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.0s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.7s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WebAppApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WebAppApplications) (1.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (15.1s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_011_CreateAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:02:13Z" end-time="2024-11-13T20:02:35Z" duration="22.146002" asserts="0" seed="305450283">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.8s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (4.0s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.8s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "applications/webapp" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("applications/webapp", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.5s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:02:35Z" end-time="2024-11-13T20:03:59Z" duration="83.690655">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:02:35Z" end-time="2024-11-13T20:03:34Z" duration="58.458086" asserts="0" seed="1756059825">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.5s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.1s)
When User clicks on Sub Section Win32 Line-of-business App
-> done: BrowsePoliciesStepDefinitions.WhenUserClickOnSubSectionWin32Line_Of_BusinessApp() (0.4s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsApplications) (2.8s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.0s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Input File comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Input File comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User uploads a folder "InputFolder"
-> done: AssetEditorStepDefinitions.WhenUserUploadAFolder("InputFolder") (3.1s)
And User enters upload folder comment as "Input Folder comments"
-> done: AssetEditorStepDefinitions.WhenUserEntersUploadFolderCommentAs("Input Folder comm...") (0.1s)
When User clicks on "Folder Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Folder Upload") (0.1s)
And User waits for 6 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(6, "seconds") (6.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.0s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.9s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_012_CreateAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:03:34Z" end-time="2024-11-13T20:03:59Z" duration="25.232569" asserts="0" seed="1204556859">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.6s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.4s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "applications/windows" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("applications/windows", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.6s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.6s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" classname="SpecFlowAutomation.Tests.Features._013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:03:59Z" end-time="2024-11-13T20:05:05Z" duration="66.18552">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:03:59Z" end-time="2024-11-13T20:04:46Z" duration="46.714727" asserts="0" seed="2037752427">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.1s)
When User clicks on "iOS Trusted Root Certificate" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS Trusted Root ...") (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.5s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.4s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSDeviceConfigur...) (2.2s)
And User waits for 6 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(6, "seconds") (6.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.0s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.8s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_013_CreateAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:04:46Z" end-time="2024-11-13T20:05:05Z" duration="19.470793" asserts="0" seed="1357859761">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.8s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.2s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.8s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "deviceconfigurations/ios" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("deviceconfigurati...", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.6s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.1s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:05:05Z" end-time="2024-11-13T20:06:11Z" duration="65.840703">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T20:05:05Z" end-time="2024-11-13T20:05:47Z" duration="42.093365" asserts="0" seed="155179929">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.5s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.4s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (0.1s)
When User clicks on "Windows 10 Custom Configuration" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10 Custom...") (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.6s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsDeviceConf...) (1.3s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.2s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_014_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T20:05:47Z" end-time="2024-11-13T20:06:11Z" duration="23.747338" asserts="0" seed="93272343">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (13.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.7s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "deviceconfigurations/windows" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("deviceconfigurati...", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.1s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" fullname="SpecFlowAutomation.Tests.Features._015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" classname="SpecFlowAutomation.Tests.Features._015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:06:11Z" end-time="2024-11-13T20:07:01Z" duration="50.2678">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" result="Passed" start-time="2024-11-13T20:06:11Z" end-time="2024-11-13T20:06:41Z" duration="30.403574" asserts="0" seed="1077027556">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.2s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (0.1s)
When User clicks on "Windows 10 Custom Configuration" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10 Custom...") (0.1s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsOmaDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsOmaDeviceC...) (2.3s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_015_CreateAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" result="Passed" start-time="2024-11-13T20:06:41Z" end-time="2024-11-13T20:07:01Z" duration="19.864226" asserts="0" seed="309247072">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.3s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.9s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "deviceconfigurations/windows" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("deviceconfigurati...", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.6s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature" classname="SpecFlowAutomation.Tests.Features._016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:07:01Z" end-time="2024-11-13T20:08:15Z" duration="73.625231">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature" result="Passed" start-time="2024-11-13T20:07:01Z" end-time="2024-11-13T20:07:56Z" duration="55.03668" asserts="0" seed="1854142998">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Scripts" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Scripts") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.1s)
When User clicks on "Device Management Script" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Management...") (10.8s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.3s)
And User selects Policy dropdown as "Automation-script"
-> done: PromotePoliciesStepDefinitions.ThenUserSelectsPolicyDropdownAs("Automation-script") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (2.0s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsScripts"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsScripts) (1.9s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.8s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_016_CreateAndDeleteBaselinePoliciesForScriptsWindowsFeature" result="Passed" start-time="2024-11-13T20:07:56Z" end-time="2024-11-13T20:08:15Z" duration="18.588551" asserts="0" seed="1576148368">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Scripts" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Scripts") (0.3s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.9s)
When User search Automation Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION Policy") (1.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "scripts/windows" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("scripts/windows", "AUTOMATION Policy") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.6s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" fullname="SpecFlowAutomation.Tests.Features._017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" classname="SpecFlowAutomation.Tests.Features._017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:08:15Z" end-time="2024-11-13T20:09:25Z" duration="70.151068">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T20:08:15Z" end-time="2024-11-13T20:09:06Z" duration="51.523883" asserts="0" seed="1670186156">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.4s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "admin-template-graphapi"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("admin-template-gr...") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "admin-template-graphapi"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("admin-template-gr...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsAdministrativeTemplates"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsAdministra...) (1.8s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.7s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_017_ExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T20:09:06Z" end-time="2024-11-13T20:09:25Z" duration="18.627185" asserts="0" seed="1184744161">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.8s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.4s)
When User clicks on "administrativetemplates/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("administrativetem...", "AUTOMATION Policy") (2.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" classname="SpecFlowAutomation.Tests.Features._018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:09:25Z" end-time="2024-11-13T20:10:51Z" duration="85.517632">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:09:25Z" end-time="2024-11-13T20:10:33Z" duration="67.819734" asserts="0" seed="202349346">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (3.8s)
And User waits for 4 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(4, "seconds") (4.0s)
When User search Automation Policy "Asavie Moda"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("Asavie Moda") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "Asavie Moda"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Asavie Moda") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.0s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSApplications) (4.6s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.9s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.6s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_018_ExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:10:33Z" end-time="2024-11-13T20:10:51Z" duration="17.697898" asserts="0" seed="1626610479">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.5s)
When User clicks on "applications/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/ios", "AUTOMATION Policy") (2.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" fullname="SpecFlowAutomation.Tests.Features._019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" classname="SpecFlowAutomation.Tests.Features._019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:10:51Z" end-time="2024-11-13T20:12:15Z" duration="83.9745">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:10:51Z" end-time="2024-11-13T20:11:49Z" duration="58.130902" asserts="0" seed="1238505599">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (0.8s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
When User search Automation Policy "aaaayug test 0001 0002"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("aaaayug test 0001...") (1.4s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.4s)
And User waits for 4 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(4, "seconds") (4.0s)
And User should see link "aaaayug test 0001 0002"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("aaaayug test 0001...") (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WebAppApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WebAppApplications) (1.5s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.1s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_019_ExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:11:49Z" end-time="2024-11-13T20:12:15Z" duration="25.843598" asserts="0" seed="349231342">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (5.1s)
When User clicks on "applications/webapp" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/webapp", "AUTOMATION Policy") (6.2s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (1.0s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (1.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:12:15Z" end-time="2024-11-13T20:13:53Z" duration="98.687476">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:12:15Z" end-time="2024-11-13T20:13:29Z" duration="74.707311" asserts="0" seed="2078720390">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.6s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.2s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (3.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "7-Zip detection rules"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("7-Zip detection r...") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "7-Zip detection rules"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("7-Zip detection r...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.0s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.0s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.2s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsApplications) (2.2s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Input File comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Input File comments") (0.2s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User uploads a folder "InputFolder"
-> done: AssetEditorStepDefinitions.WhenUserUploadAFolder("InputFolder") (3.1s)
And User enters upload folder comment as "Input Folder comments"
-> done: AssetEditorStepDefinitions.WhenUserEntersUploadFolderCommentAs("Input Folder comm...") (0.1s)
When User clicks on "Folder Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Folder Upload") (0.1s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.7s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_020_ExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:13:29Z" end-time="2024-11-13T20:13:53Z" duration="23.980165" asserts="0" seed="81552773">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.4s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/windows", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.5s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" classname="SpecFlowAutomation.Tests.Features._021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:13:53Z" end-time="2024-11-13T20:15:08Z" duration="74.315458">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:13:53Z" end-time="2024-11-13T20:14:49Z" duration="55.206727" asserts="0" seed="1501057876">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.7s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.2s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.2s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "MoJo - iOS - TrustedCert - devlrootCA"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("MoJo - iOS - Trus...") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "MoJo - iOS - TrustedCert - devlrootCA"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("MoJo - iOS - Trus...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSDeviceConfigur...) (2.2s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.2s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_021_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:14:49Z" end-time="2024-11-13T20:15:08Z" duration="19.108731" asserts="0" seed="798306117">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.7s)
When User clicks on "deviceconfigurations/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (3.2s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.3s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.7s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:15:08Z" end-time="2024-11-13T20:16:18Z" duration="70.772899">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T20:15:08Z" end-time="2024-11-13T20:16:00Z" duration="51.908411" asserts="0" seed="68394192">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.2s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.7s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
When User search Automation Policy "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("devl MoJO - Win10...") (1.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl MoJO - Win10...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsDeviceConf...) (1.1s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_022_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T20:16:00Z" end-time="2024-11-13T20:16:18Z" duration="18.864488" asserts="0" seed="488278312">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.5s)
When User clicks on "deviceconfigurations/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (2.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" fullname="SpecFlowAutomation.Tests.Features._023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" classname="SpecFlowAutomation.Tests.Features._023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:16:18Z" end-time="2024-11-13T20:17:26Z" duration="67.813288">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" result="Passed" start-time="2024-11-13T20:16:18Z" end-time="2024-11-13T20:17:07Z" duration="48.871145" asserts="0" seed="372461387">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.7s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("devl MoJO - Win10...") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl MoJO - Win10...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsOmaDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsOmaDeviceC...) (2.0s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.2s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_023_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsOmaSettingsFeature" result="Passed" start-time="2024-11-13T20:17:07Z" end-time="2024-11-13T20:17:26Z" duration="18.942143" asserts="0" seed="867797653">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.3s)
When User clicks on "deviceconfigurations/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (2.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" classname="SpecFlowAutomation.Tests.Features._024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:17:26Z" end-time="2024-11-13T20:18:47Z" duration="80.498771">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" result="Passed" start-time="2024-11-13T20:17:26Z" end-time="2024-11-13T20:18:29Z" duration="62.591218" asserts="0" seed="2045198604">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Scripts" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Scripts") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.9s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "AUTOMATION-test-200224"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION-test-2...") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (10.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "AUTOMATION-test-200224"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("AUTOMATION-test-2...") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Policy dropdown as "Automation-script"
-> done: PromotePoliciesStepDefinitions.ThenUserSelectsPolicyDropdownAs("Automation-script") (0.0s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (1.6s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsScripts"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsScripts) (2.0s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.8s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_024_ExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" result="Passed" start-time="2024-11-13T20:18:29Z" end-time="2024-11-13T20:18:47Z" duration="17.907553" asserts="0" seed="1340443818">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Scripts" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Scripts") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.7s)
When User clicks on "scripts/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("scripts/windows", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.3s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.8s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" fullname="SpecFlowAutomation.Tests.Features._025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" classname="SpecFlowAutomation.Tests.Features._025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:18:47Z" end-time="2024-11-13T20:19:36Z" duration="49.567401">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" result="Passed" start-time="2024-11-13T20:18:47Z" end-time="2024-11-13T20:19:19Z" duration="32.130235" asserts="0" seed="971802814">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.2s)
And User clicks on "Application Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Application Confi...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.1s)
When User clicks on "iOS Mobile App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS Mobile App") (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.5s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSApplicationConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSApplicationCon...) (1.5s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_025_CreateAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" result="Passed" start-time="2024-11-13T20:19:19Z" end-time="2024-11-13T20:19:36Z" duration="17.437166" asserts="0" seed="1301424956">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Application Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Application Confi...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.0s)
And User should see "applicationconfigurations/ios" Policy "AUTOMATION Policy" View button
-> done: BrowsePoliciesStepDefinitions.GivenUserShouldSeePolicyViewButton("applicationconfig...", "AUTOMATION Policy") (0.0s)
When User clicks on "applicationconfigurations/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applicationconfig...", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" fullname="SpecFlowAutomation.Tests.Features._026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" classname="SpecFlowAutomation.Tests.Features._026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:19:36Z" end-time="2024-11-13T20:20:37Z" duration="60.461437">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" result="Passed" start-time="2024-11-13T20:19:36Z" end-time="2024-11-13T20:20:19Z" duration="42.603903" asserts="0" seed="1916850390">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Application Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Application Confi...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.8s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
When User extracts Policy "GlobalProtect Test"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("GlobalProtect Test") (4.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "GlobalProtect Test"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("GlobalProtect Test") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSApplicationConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSApplicationCon...) (1.5s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_026_ExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" result="Passed" start-time="2024-11-13T20:20:19Z" end-time="2024-11-13T20:20:37Z" duration="17.857534" asserts="0" seed="1840039971">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Application Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Application Confi...") (0.2s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.0s)
When User clicks on "applicationconfigurations/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applicationconfig...", "AUTOMATION Policy") (2.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.8s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_027_ApplicationCatalogueFeature" fullname="SpecFlowAutomation.Tests.Features._027_ApplicationCatalogueFeature" classname="SpecFlowAutomation.Tests.Features._027_ApplicationCatalogueFeature" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:20:37Z" end-time="2024-11-13T20:21:15Z" duration="38.388813">
            <test-case name="BrowseApplicationCatalogue" fullname="SpecFlowAutomation.Tests.Features._027_ApplicationCatalogueFeature.BrowseApplicationCatalogue" methodname="BrowseApplicationCatalogue" classname="_027_ApplicationCatalogueFeature" result="Passed" start-time="2024-11-13T20:20:37Z" end-time="2024-11-13T20:21:15Z" duration="38.388813" asserts="0" seed="226713495">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.4s)
And User clicks on "Application catalogue" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Application catal...") (0.1s)
Then User should see page heading "Application catalogue"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePageHeading("Application catal...") (0.0s)
And User should see "Application catalogue" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Application catal...") (0.1s)
And User waits for 20 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(20, "seconds") (20.0s)
Then User should see text "Display name"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Display name") (0.1s)
And User should see text "Required AD group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Required AD group") (0.1s)
And User should see text "Available AD group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Available AD group") (0.1s)
And User should see text "Uninstall AD group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Uninstall AD group") (0.1s)
And User should see text "Available environments"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Available environ...") (0.1s)
And User should see Display name as "Asavie Moda"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeDisplayNameAs("Asavie Moda") (3.4s)
And User should see Display name as "devl GOOGLE"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeDisplayNameAs("devl GOOGLE") (3.5s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_03_BrowsePoliciesFeature" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature" classname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature" total="19" passed="16" failed="0" inconclusive="0" skipped="3" result="Passed" start-time="2024-11-13T20:21:15Z" end-time="2024-11-13T20:27:14Z" duration="359.0962948">
            <test-case name="_1_FilterBrowsePolicy(&quot;CHECKED OUT&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;CHECKED OUT&quot;,&quot;10&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;CHECKED OUT&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:21:15Z" end-time="2024-11-13T20:21:37Z" duration="21.845267" asserts="0" seed="1775012371">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.0s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.4s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "CHECKED OUT"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("CHECKED OUT") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_1_FilterBrowsePolicy(&quot;IDLE&quot;,&quot;50&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;IDLE&quot;,&quot;50&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;IDLE&quot;,&quot;50&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:21:37Z" end-time="2024-11-13T20:21:58Z" duration="20.958956" asserts="0" seed="1089693305">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.3s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "50"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("50") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_1_FilterBrowsePolicy(&quot;PROMOTING&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;PROMOTING&quot;,&quot;20&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;PROMOTING&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:21:58Z" end-time="2024-11-13T20:22:18Z" duration="20.168509" asserts="0" seed="2083750983">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.7s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.3s)
And User selects State as "PROMOTING"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("PROMOTING") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_1_FilterBrowsePolicy(&quot;PROMOTION FAILED&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;PROMOTION FAILED&quot;,&quot;20&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;PROMOTION FAILED&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:22:18Z" end-time="2024-11-13T20:22:50Z" duration="32.343255" asserts="0" seed="1170917068">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (11.0s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (16.6s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "PROMOTION FAILED"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("PROMOTION FAILED") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_1_FilterBrowsePolicy(&quot;PROMOTION PENDING&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;PROMOTION PENDING&quot;,&quot;20&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;PROMOTION PENDING&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:22:50Z" end-time="2024-11-13T20:23:12Z" duration="21.461856" asserts="0" seed="1451502276">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (8.0s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "PROMOTION PENDING"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("PROMOTION PENDING") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_1_FilterBrowsePolicy(&quot;REVIEW PROMOTION&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;REVIEW PROMOTION&quot;,&quot;20&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;REVIEW PROMOTION&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:23:12Z" end-time="2024-11-13T20:23:34Z" duration="21.638152" asserts="0" seed="1661013586">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.8s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "REVIEW PROMOTION"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("REVIEW PROMOTION") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_1_FilterBrowsePolicy(&quot;UNKNOWN&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._1_FilterBrowsePolicy(&quot;UNKNOWN&quot;,&quot;20&quot;,null)" methodname="_1_FilterBrowsePolicy(&quot;UNKNOWN&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:23:34Z" end-time="2024-11-13T20:23:55Z" duration="21.51197" asserts="0" seed="2039056499">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.0s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.7s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.3s)
And User selects State as "UNKNOWN"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("UNKNOWN") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_ResetBrowsePolicy(&quot;IDLE&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._2_ResetBrowsePolicy(&quot;IDLE&quot;,&quot;20&quot;,null)" methodname="_2_ResetBrowsePolicy(&quot;IDLE&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:23:55Z" end-time="2024-11-13T20:24:19Z" duration="23.855978" asserts="0" seed="2144850619">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (9.5s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.3s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("20") (0.0s)
When User clicks on Reset Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnResetButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Search Criteria cleared
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeSearchCriteriaCleared() (0.1s)
And User should see dropdown State as "Select State"
Select State
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownStateAs("Select State") (0.2s)
And User should see dropdown Records Per Page as "10"
10
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownRecordsPerPageAs("10") (0.1s)

]]></output>
            </test-case>
            <test-case name="_3_SortingOrderByPolicyName(&quot;IDLE&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._3_SortingOrderByPolicyName(&quot;IDLE&quot;,&quot;10&quot;,null)" methodname="_3_SortingOrderByPolicyName(&quot;IDLE&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:24:19Z" end-time="2024-11-13T20:24:39Z" duration="20.11993" asserts="0" seed="490030395">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.7s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (3.1s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.0s)
And User should see policies sort by "Name" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("Name") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Name" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Name") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "Name" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("Name") (0.3s)

]]></output>
            </test-case>
            <test-case name="_4_SortingOrderByState(&quot;IDLE&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._4_SortingOrderByState(&quot;IDLE&quot;,&quot;10&quot;,null)" methodname="_4_SortingOrderByState(&quot;IDLE&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:24:39Z" end-time="2024-11-13T20:25:03Z" duration="24.136873" asserts="0" seed="215321456">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.7s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.2s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.1s)
When User clicks on "State" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("State") (0.2s)
Then User should see policies sort by "State" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("State") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "State" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("State") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "State" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("State") (0.3s)

]]></output>
            </test-case>
            <test-case name="_5_SortingOrderByBaselineChanged(&quot;IDLE&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._5_SortingOrderByBaselineChanged(&quot;IDLE&quot;,&quot;10&quot;,null)" methodname="_5_SortingOrderByBaselineChanged(&quot;IDLE&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:25:03Z" end-time="2024-11-13T20:25:29Z" duration="25.362489" asserts="0" seed="576839806">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.6s)
And User enters Search Criteria as ""
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("") (0.3s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.1s)
When User clicks on "Baseline Changed" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Baseline Changed") (0.2s)
Then User should see policies sort by "Baseline Changed" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("Baseline Changed") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Baseline Changed" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Baseline Changed") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "Baseline Changed" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("Baseline Changed") (0.2s)

]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;IDLE&quot;,&quot;50&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;IDLE&quot;,&quot;50&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;IDLE&quot;,&quot;50&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:25:29Z" end-time="2024-11-13T20:25:50Z" duration="21.6511609" asserts="0" seed="268008305">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.7s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.1s)
And User enters Search Criteria as "Z"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Z") (0.3s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "50"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("50") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.0s)
And User should not see new search for "Z"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("Z") (0.3s)

]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;IDLE&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;IDLE&quot;,&quot;20&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;IDLE&quot;,&quot;20&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:25:50Z" end-time="2024-11-13T20:26:11Z" duration="20.527319" asserts="0" seed="1587825028">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.5s)
And User enters Search Criteria as "ZZ"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("ZZ") (0.2s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.0s)
And User should not see new search for "ZZ"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("ZZ") (0.3s)

]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;IDLE&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;IDLE&quot;,&quot;100&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;IDLE&quot;,&quot;100&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:26:11Z" end-time="2024-11-13T20:26:31Z" duration="20.186877" asserts="0" seed="1404947598">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.6s)
And User enters Search Criteria as "Q1"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Q1") (0.2s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "100"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("100") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.1s)
And User should not see new search for "Q1"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("Q1") (0.1s)

]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;IDLE&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;IDLE&quot;,&quot;100&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;IDLE&quot;,&quot;100&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:26:31Z" end-time="2024-11-13T20:26:51Z" duration="20.380089" asserts="0" seed="950291349">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.8s)
And User enters Search Criteria as "Z2"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("Z2") (0.2s)
And User selects State as "IDLE"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("IDLE") (0.2s)
And User selects Records Per Page as "100"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("100") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.1s)
And User should not see new search for "Z2"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeeNewSearchFor("Z2") (0.2s)

]]></output>
            </test-case>
            <test-case name="_7_ResultsMatchSearchCriteria(&quot;AUTOMATION&quot;,&quot;IDLE&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._7_ResultsMatchSearchCriteria(&quot;AUTOMATION&quot;,&quot;IDLE&quot;,&quot;10&quot;,null)" methodname="_7_ResultsMatchSearchCriteria(&quot;AUTOMATION&quot;,&quot;IDLE&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Skipped" start-time="2024-11-13T20:26:51Z" end-time="2024-11-13T20:26:51Z" duration="0.001871" asserts="0" seed="1691147194">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_7_ResultsMatchSearchCriteria(&quot;devl&quot;,&quot;IDLE&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._7_ResultsMatchSearchCriteria(&quot;devl&quot;,&quot;IDLE&quot;,&quot;10&quot;,null)" methodname="_7_ResultsMatchSearchCriteria(&quot;devl&quot;,&quot;IDLE&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Skipped" start-time="2024-11-13T20:26:51Z" end-time="2024-11-13T20:26:51Z" duration="0.0019" asserts="0" seed="247291771">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_8_VerifyPreviousNextPageNumberLinksInPagination(&quot;AUTO&quot;,&quot;CHECKED OUT&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._8_VerifyPreviousNextPageNumberLinksInPagination(&quot;AUTO&quot;,&quot;CHECKED OUT&quot;,&quot;10&quot;,null)" methodname="_8_VerifyPreviousNextPageNumberLinksInPagination(&quot;AUTO&quot;,&quot;CHECKED OUT&quot;,&quot;10&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Skipped" start-time="2024-11-13T20:26:51Z" end-time="2024-11-13T20:26:51Z" duration="5.8E-05" asserts="0" seed="140395006">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_9_PolicyStates(&quot;CHECKED OUT&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._03_BrowsePoliciesFeature._9_PolicyStates(&quot;CHECKED OUT&quot;,null)" methodname="_9_PolicyStates(&quot;CHECKED OUT&quot;,null)" classname="_03_BrowsePoliciesFeature" result="Passed" start-time="2024-11-13T20:26:51Z" end-time="2024-11-13T20:27:14Z" duration="22.9437849" asserts="0" seed="1686548175">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.4s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.2s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (10.0s)
And User selects State as "CHECKED OUT"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsStateAs("CHECKED OUT") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see results with State as "CHECKED OUT"
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeResultsWithStateAs("CHECKED OUT") (0.3s)
And User should see dropdown State as "CHECKED OUT"
CHECKED OUT
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownStateAs("CHECKED OUT") (0.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" fullname="SpecFlowAutomation.Tests.Features._031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" classname="SpecFlowAutomation.Tests.Features._031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:27:14Z" end-time="2024-11-13T20:28:44Z" duration="89.594985">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" result="Passed" start-time="2024-11-13T20:27:14Z" end-time="2024-11-13T20:28:20Z" duration="65.939789" asserts="0" seed="1806496232">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (9.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User extracts Policy "devl SupersedenceTest1"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("devl Supersedence...") (5.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "devl SupersedenceTest1"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl Supersedence...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Input File comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Input File comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User uploads a folder "InputFolder"
-> done: AssetEditorStepDefinitions.WhenUserUploadAFolder("InputFolder") (3.1s)
And User enters upload folder comment as "Input Folder comments"
-> done: AssetEditorStepDefinitions.WhenUserEntersUploadFolderCommentAs("Input Folder comm...") (0.1s)
When User clicks on "Folder Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Folder Upload") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.1s)
When User edits policy details Json Editor Container for "WindowsSupersedence"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsSupersedence) (3.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_031_ExtractAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" result="Passed" start-time="2024-11-13T20:28:20Z" end-time="2024-11-13T20:28:44Z" duration="23.655196" asserts="0" seed="1247973918">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.9s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/windows", "AUTOMATION Policy") (3.2s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" fullname="SpecFlowAutomation.Tests.Features._033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" classname="SpecFlowAutomation.Tests.Features._033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:28:44Z" end-time="2024-11-13T20:29:28Z" duration="43.94755">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T20:28:44Z" end-time="2024-11-13T20:29:10Z" duration="25.999712" asserts="0" seed="2039624378">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.0s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User extracts Policy "devl LPW Test AdminTemplate"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("devl LPW Test Adm...") (5.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "devl LPW Test AdminTemplate"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl LPW Test Adm...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.5s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User should see "assignment" in Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInExtractedPolicy("assignment") (0.3s)
And User should see "groupPrefix" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupPrefix") (0.0s)
And User should see "MoJo-Dev-Win10-[[policyId]]" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("MoJo-Dev-Win10-[[...") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_033_ExtractVerifyAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T20:29:10Z" end-time="2024-11-13T20:29:28Z" duration="17.947838" asserts="0" seed="112293004">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.2s)
When User clicks on "administrativetemplates/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("administrativetem...", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature" classname="SpecFlowAutomation.Tests.Features._034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:29:28Z" end-time="2024-11-13T20:30:17Z" duration="48.865854">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:29:28Z" end-time="2024-11-13T20:29:58Z" duration="30.264445" asserts="0" seed="1514887417">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (2.6s)
And User waits for 4 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(4, "seconds") (4.0s)
When User extracts Policy "Asavie Moda"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("Asavie Moda") (5.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "Asavie Moda"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Asavie Moda") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User should see "assignment" in Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInExtractedPolicy("assignment") (0.3s)
And User should see "groupPrefix" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupPrefix") (0.0s)
And User should see "MoJo-App-iOS-[[policyId]]" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("MoJo-App-iOS-[[po...") (0.0s)
And User should see "type" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("type") (0.0s)
And User should see "groupAssignmentTarget" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupAssignmentTa...") (0.0s)
And User should see "iosStoreApp" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("iosStoreApp") (0.0s)
And User should see "notes" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("notes") (0.0s)
And User should see "owner" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("owner") (0.0s)
And User should see "publisher" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("publisher") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_034_ExtractVerifyAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:29:58Z" end-time="2024-11-13T20:30:17Z" duration="18.601409" asserts="0" seed="1920343897">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.5s)
When User clicks on "applications/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/ios", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature" fullname="SpecFlowAutomation.Tests.Features._035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature" classname="SpecFlowAutomation.Tests.Features._035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:30:17Z" end-time="2024-11-13T20:31:03Z" duration="46.3503699">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:30:17Z" end-time="2024-11-13T20:30:42Z" duration="25.786928" asserts="0" seed="435936523">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.4s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (0.5s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
When User extracts Policy "aaaayug test 0001 0002"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("aaaayug test 0001...") (5.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "aaaayug test 0001 0002"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("aaaayug test 0001...") (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.0s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.5s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User should see "assignment" in Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInExtractedPolicy("assignment") (0.3s)
And User should see "groupPrefix" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupPrefix") (0.0s)
And User should see "MoJo-App-Web-[[policyId]]" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("MoJo-App-Web-[[po...") (0.0s)
And User should see "type" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("type") (0.0s)
And User should see "groupAssignmentTarget" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupAssignmentTa...") (0.0s)
And User should see "webApp" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("webApp") (0.0s)
And User should see "owner" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("owner") (0.0s)
And User should see "privacyInformationUrl" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("privacyInformatio...") (0.0s)
And User should see "publisher" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("publisher") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_035_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:30:42Z" end-time="2024-11-13T20:31:03Z" duration="20.5634419" asserts="0" seed="839009480">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (3.8s)
When User clicks on "applications/webapp" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/webapp", "AUTOMATION Policy") (3.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.6s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:31:03Z" end-time="2024-11-13T20:32:01Z" duration="58.06162">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:31:03Z" end-time="2024-11-13T20:31:36Z" duration="33.264762" asserts="0" seed="448376225">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (3.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User extracts Policy "7-Zip"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("7-Zip") (5.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "7-Zip"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("7-Zip") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.0s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Input File comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Input File comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User uploads a folder "InputFolder"
-> done: AssetEditorStepDefinitions.WhenUserUploadAFolder("InputFolder") (3.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User should see "assignment" in Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInExtractedPolicy("assignment") (0.3s)
And User should see "groupPrefix" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupPrefix") (0.0s)
And User should see "MoJo-App-Win10-[[policyId]]" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("MoJo-App-Win10-[[...") (0.0s)
And User should see "type" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("type") (0.0s)
And User should see "groupAssignmentTarget" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupAssignmentTa...") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_036_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:31:36Z" end-time="2024-11-13T20:32:01Z" duration="24.796858" asserts="0" seed="1561066119">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.9s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/windows", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" classname="SpecFlowAutomation.Tests.Features._037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:32:01Z" end-time="2024-11-13T20:32:43Z" duration="42.007006">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:32:01Z" end-time="2024-11-13T20:32:24Z" duration="23.17319" asserts="0" seed="84105594">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User extracts Policy "MoJo - iOS - TrustedCert - devlrootCA"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("MoJo - iOS - Trus...") (4.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "MoJo - iOS - TrustedCert - devlrootCA"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("MoJo - iOS - Trus...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.8s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User should see "assignment" in Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInExtractedPolicy("assignment") (0.2s)
And User should see "groupPrefix" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupPrefix") (0.0s)
And User should see "MoJo-Dev-iOS-[[policyId]]" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("MoJo-Dev-iOS-[[po...") (0.0s)
And User should see "environments" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("environments") (0.0s)
And User should see "devl" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("devl") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_037_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:32:24Z" end-time="2024-11-13T20:32:43Z" duration="18.833816" asserts="0" seed="2102953082">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.2s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (2.3s)
When User clicks on "deviceconfigurations/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.3s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:32:43Z" end-time="2024-11-13T20:33:27Z" duration="43.911713">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T20:32:43Z" end-time="2024-11-13T20:33:08Z" duration="24.776146" asserts="0" seed="2046208806">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.8s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.3s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.2s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.7s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User extracts Policy "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: BrowsePoliciesStepDefinitions.WhenUserExtractsPolicyInEnvironment("devl MoJO - Win10...") (4.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl MoJO - Win10...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
And User should see "assignment" in Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInExtractedPolicy("assignment") (0.3s)
And User should see "groupPrefix" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("groupPrefix") (0.0s)
And User should see "MoJo-Dev-Win10-[[policyId]]" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("MoJo-Dev-Win10-[[...") (0.0s)
And User should see "environments" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("environments") (0.0s)
And User should see "devl" in above Extracted policy
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInAboveExtractedPolicy("devl") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_038_ExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T20:33:08Z" end-time="2024-11-13T20:33:27Z" duration="19.135567" asserts="0" seed="119028218">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.0s)
When User clicks on "deviceconfigurations/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (2.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.7s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_040_CreateUSBDeviceControlsVID_PIDFeature" fullname="SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature" classname="SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature" total="4" passed="0" failed="4" inconclusive="0" skipped="0" result="Failed" start-time="2024-11-13T20:33:27Z" end-time="2024-11-13T20:34:56Z" duration="89.302694">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._1_Create" methodname="_1_Create" classname="_040_CreateUSBDeviceControlsVID_PIDFeature" result="Failed" start-time="2024-11-13T20:33:27Z" end-time="2024-11-13T20:33:50Z" duration="22.635488" asserts="0" seed="560685497">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.5s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User enters Description value as "Automation"
-> skipped because of previous errors
And User selects Type as "VID_PID"
-> skipped because of previous errors
And User enters Value as "0123_4567"
-> skipped because of previous errors
And User checks Environments devl
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on USB "Add" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see text "Publish descriptors"
-> skipped because of previous errors
And User should see text "Manage user group"
-> skipped because of previous errors
And User should see text "Promote changes"
-> skipped because of previous errors
And User should see table header "Description"
-> skipped because of previous errors
And User should see table header "Type"
-> skipped because of previous errors
And User should see table header "Value"
-> skipped because of previous errors
And User should see table header "Environments"
-> skipped because of previous errors
Then User should see Description as "Automation"
-> skipped because of previous errors
And User should see Type as "VID_PID"
-> skipped because of previous errors
And User should see Value as "0123_4567"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User selects USB target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
Then User should see Description as "Automation"
-> skipped because of previous errors
And User should see Type as "VID_PID"
-> skipped because of previous errors
And User should see Value as "0123_4567"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up "usbdc" history
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._1_Create() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsVID_PID.feature:line 51</stack-trace>
              </failure>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._2_Edit" methodname="_2_Edit" classname="_040_CreateUSBDeviceControlsVID_PIDFeature" result="Failed" start-time="2024-11-13T20:33:50Z" end-time="2024-11-13T20:34:12Z" duration="22.076167" asserts="0" seed="1719017681">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.2s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User clicks on USB "Edit" button
-> skipped because of previous errors
And User enters Description value as "AutomationEdit"
-> skipped because of previous errors
And User enters Value as "4567_0123"
-> skipped because of previous errors
And User clicks on USB "Save" button
-> skipped because of previous errors
Then User should see Description as "AutomationEdit"
-> skipped because of previous errors
And User should see Type as "VID_PID"
-> skipped because of previous errors
And User should see Value as "4567_0123"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Description as "AutomationEdit"
-> skipped because of previous errors
And User should see Type as "VID_PID"
-> skipped because of previous errors
And User should see Value as "4567_0123"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects USB target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
Then User should see Description as "AutomationEdit"
-> skipped because of previous errors
And User should see Type as "VID_PID"
-> skipped because of previous errors
And User should see Value as "4567_0123"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up "usbdc" history
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._2_Edit() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsVID_PID.feature:line 82</stack-trace>
              </failure>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._3_Delete" methodname="_3_Delete" classname="_040_CreateUSBDeviceControlsVID_PIDFeature" result="Failed" start-time="2024-11-13T20:34:12Z" end-time="2024-11-13T20:34:34Z" duration="22.552959" asserts="0" seed="1704246949">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.6s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.2s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User clicks on USB "Delete" button
-> skipped because of previous errors
And User clicks on USB "Confirm" button
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects USB target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 5 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up "usbdc" history
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._3_Delete() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsVID_PID.feature:line 99</stack-trace>
              </failure>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._4_Discard" methodname="_4_Discard" classname="_040_CreateUSBDeviceControlsVID_PIDFeature" result="Failed" start-time="2024-11-13T20:34:34Z" end-time="2024-11-13T20:34:56Z" duration="22.03808" asserts="0" seed="1423020703">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.3s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Discard" link
-> skipped because of previous errors
When User clicks on "Discard" button
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._040_CreateUSBDeviceControlsVID_PIDFeature._4_Discard() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsVID_PID.feature:line 105</stack-trace>
              </failure>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_041_CreateUSBDeviceControlsDeviceIdFeature" fullname="SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature" classname="SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature" total="4" passed="0" failed="4" inconclusive="0" skipped="0" result="Failed" start-time="2024-11-13T20:34:56Z" end-time="2024-11-13T20:36:24Z" duration="87.3102249">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._1_Create" methodname="_1_Create" classname="_041_CreateUSBDeviceControlsDeviceIdFeature" result="Failed" start-time="2024-11-13T20:34:56Z" end-time="2024-11-13T20:35:18Z" duration="21.175224" asserts="0" seed="1318149026">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.2s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.2s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User enters Description value as "Automation"
-> skipped because of previous errors
And User selects Type as "DeviceId"
-> skipped because of previous errors
And User enters Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> skipped because of previous errors
And User checks Environments devl
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on USB "Add" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see text "Publish descriptors"
-> skipped because of previous errors
And User should see text "Manage user group"
-> skipped because of previous errors
And User should see text "Promote changes"
-> skipped because of previous errors
And User should see table header "Description"
-> skipped because of previous errors
And User should see table header "Type"
-> skipped because of previous errors
And User should see table header "Value"
-> skipped because of previous errors
And User should see table header "Environments"
-> skipped because of previous errors
Then User should see Description as "Automation"
-> skipped because of previous errors
And User should see Type as "DeviceId"
-> skipped because of previous errors
And User should see Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User selects USB target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
Then User should see Description as "Automation"
-> skipped because of previous errors
And User should see Type as "DeviceId"
-> skipped because of previous errors
And User should see Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up "usbdc" history
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._1_Create() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsDeviceId.feature:line 51</stack-trace>
              </failure>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._2_Edit" methodname="_2_Edit" classname="_041_CreateUSBDeviceControlsDeviceIdFeature" result="Failed" start-time="2024-11-13T20:35:18Z" end-time="2024-11-13T20:35:40Z" duration="22.858487" asserts="0" seed="398711430">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.4s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User clicks on USB "Edit" button
-> skipped because of previous errors
And User enters Description value as "AutomationEdit"
-> skipped because of previous errors
And User enters Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> skipped because of previous errors
And User clicks on USB "Save" button
-> skipped because of previous errors
Then User should see Description as "AutomationEdit"
-> skipped because of previous errors
And User should see Type as "DeviceId"
-> skipped because of previous errors
And User should see Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Description as "AutomationEdit"
-> skipped because of previous errors
And User should see Type as "DeviceId"
-> skipped because of previous errors
And User should see Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects USB target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
Then User should see Description as "AutomationEdit"
-> skipped because of previous errors
And User should see Type as "DeviceId"
-> skipped because of previous errors
And User should see Value as "USBSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> skipped because of previous errors
And User should see Environment Label as "devl"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up "usbdc" history
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._2_Edit() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsDeviceId.feature:line 82</stack-trace>
              </failure>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._3_Delete" methodname="_3_Delete" classname="_041_CreateUSBDeviceControlsDeviceIdFeature" result="Failed" start-time="2024-11-13T20:35:40Z" end-time="2024-11-13T20:36:02Z" duration="21.461662" asserts="0" seed="1529927864">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.5s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.3s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User clicks on USB "Delete" button
-> skipped because of previous errors
And User clicks on USB "Confirm" button
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Check in" link
-> skipped because of previous errors
When User clicks on "Check in" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Publish" link
-> skipped because of previous errors
And User selects USB target as Devl environment
-> skipped because of previous errors
When User clicks on "Publish" button
-> skipped because of previous errors
And User waits for 5 "seconds"
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors
And User should see version number
-> skipped because of previous errors
And User waits for 2 "seconds"
-> skipped because of previous errors
And User clean up "usbdc" history
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._3_Delete() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsDeviceId.feature:line 99</stack-trace>
              </failure>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._4_Discard" methodname="_4_Discard" classname="_041_CreateUSBDeviceControlsDeviceIdFeature" result="Failed" start-time="2024-11-13T20:36:02Z" end-time="2024-11-13T20:36:24Z" duration="21.8148519" asserts="0" seed="1638303481">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.2s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Discard" link
-> skipped because of previous errors
When User clicks on "Discard" button
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._041_CreateUSBDeviceControlsDeviceIdFeature._4_Discard() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\CreateUsbDeviceControlsDeviceId.feature:line 105</stack-trace>
              </failure>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_042_CreateDictaphoneDeviceControlsDeviceIdFeature" fullname="SpecFlowAutomation.Tests.Features._042_CreateDictaphoneDeviceControlsDeviceIdFeature" classname="SpecFlowAutomation.Tests.Features._042_CreateDictaphoneDeviceControlsDeviceIdFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:36:24Z" end-time="2024-11-13T20:38:02Z" duration="98.167635">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._042_CreateDictaphoneDeviceControlsDeviceIdFeature._1_Create" methodname="_1_Create" classname="_042_CreateDictaphoneDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:36:24Z" end-time="2024-11-13T20:36:54Z" duration="30.055089" asserts="0" seed="1477091066">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.6s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.3s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (1.0s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.2s)
And User selects Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("DeviceId") (0.1s)
And User enters Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("DICTAPH\CDROM&VEN...") (0.2s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Dictaphone "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.3s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see text "Publish descriptors"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Publish descriptors") (0.0s)
And User should see text "Manage user group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Manage user group") (0.0s)
And User should see text "Promote changes"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Promote changes") (0.0s)
And User should see table header "Description"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Description") (0.0s)
And User should see table header "Type"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Type") (0.0s)
And User should see table header "Value"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Value") (0.0s)
And User should see table header "Environments"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Environments") (0.0s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DICTAPH\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User selects Dictaphone target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDictaphoneTargetAsDevlEnvironment() (1.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DICTAPH\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dictaphone" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dictaphone") (0.1s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._042_CreateDictaphoneDeviceControlsDeviceIdFeature._2_Edit" methodname="_2_Edit" classname="_042_CreateDictaphoneDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:36:54Z" end-time="2024-11-13T20:37:18Z" duration="24.706238" asserts="0" seed="895013152">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.2s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.7s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User clicks on Dictaphone "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Description value as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("AutomationEdit") (0.2s)
And User enters Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("DICTAPH\CDROM&VEN...") (0.2s)
And User clicks on Dictaphone "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DICTAPH\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DICTAPH\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.1s)
And User selects Dictaphone target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDictaphoneTargetAsDevlEnvironment() (0.8s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DICTAPH\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DICTAPH\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dictaphone" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dictaphone") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._042_CreateDictaphoneDeviceControlsDeviceIdFeature._3_Delete" methodname="_3_Delete" classname="_042_CreateDictaphoneDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:37:18Z" end-time="2024-11-13T20:37:46Z" duration="27.785987" asserts="0" seed="1012991795">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.2s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User clicks on Dictaphone "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.1s)
And User clicks on Dictaphone "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User selects Dictaphone target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDictaphoneTargetAsDevlEnvironment() (0.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.4s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dictaphone" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dictaphone") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._042_CreateDictaphoneDeviceControlsDeviceIdFeature._4_Discard" methodname="_4_Discard" classname="_042_CreateDictaphoneDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:37:46Z" end-time="2024-11-13T20:38:02Z" duration="15.620321" asserts="0" seed="523396415">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.5s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.4s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.4s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.4s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_043_CreateDictaphoneDeviceControlsVID_PIDFeature" fullname="SpecFlowAutomation.Tests.Features._043_CreateDictaphoneDeviceControlsVID_PIDFeature" classname="SpecFlowAutomation.Tests.Features._043_CreateDictaphoneDeviceControlsVID_PIDFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:38:02Z" end-time="2024-11-13T20:39:33Z" duration="91.335846">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._043_CreateDictaphoneDeviceControlsVID_PIDFeature._1_Create" methodname="_1_Create" classname="_043_CreateDictaphoneDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:38:02Z" end-time="2024-11-13T20:38:28Z" duration="25.79478" asserts="0" seed="409917106">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.3s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.2s)
And User selects Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("VID_PID") (0.1s)
And User enters Value as "0123_4567"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("0123_4567") (0.1s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Dictaphone "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see text "Publish descriptors"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Publish descriptors") (0.0s)
And User should see text "Manage user group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Manage user group") (0.0s)
And User should see text "Promote changes"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Promote changes") (0.0s)
And User should see table header "Description"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Description") (0.0s)
And User should see table header "Type"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Type") (0.0s)
And User should see table header "Value"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Value") (0.0s)
And User should see table header "Environments"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Environments") (0.0s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "0123_4567"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("0123_4567") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User selects Dictaphone target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDictaphoneTargetAsDevlEnvironment() (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "0123_4567"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("0123_4567") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dictaphone" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dictaphone") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._043_CreateDictaphoneDeviceControlsVID_PIDFeature._2_Edit" methodname="_2_Edit" classname="_043_CreateDictaphoneDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:38:28Z" end-time="2024-11-13T20:38:51Z" duration="23.591391" asserts="0" seed="1542588957">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.9s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.3s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User clicks on Dictaphone "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Description value as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("AutomationEdit") (0.2s)
And User enters Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("4567_0123") (0.1s)
And User clicks on Dictaphone "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("4567_0123") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.3s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("4567_0123") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.1s)
And User selects Dictaphone target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDictaphoneTargetAsDevlEnvironment() (0.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("4567_0123") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dictaphone" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dictaphone") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._043_CreateDictaphoneDeviceControlsVID_PIDFeature._3_Delete" methodname="_3_Delete" classname="_043_CreateDictaphoneDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:38:51Z" end-time="2024-11-13T20:39:19Z" duration="27.932183" asserts="0" seed="1720572633">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.7s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.2s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User clicks on Dictaphone "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.1s)
And User clicks on Dictaphone "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User selects Dictaphone target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDictaphoneTargetAsDevlEnvironment() (0.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.7s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dictaphone" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dictaphone") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._043_CreateDictaphoneDeviceControlsVID_PIDFeature._4_Discard" methodname="_4_Discard" classname="_043_CreateDictaphoneDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:39:19Z" end-time="2024-11-13T20:39:33Z" duration="14.017492" asserts="0" seed="2119358206">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.2s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.4s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.1s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.3s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_044_CreateDvdCdDeviceControlsDeviceIdFeature" fullname="SpecFlowAutomation.Tests.Features._044_CreateDvdCdDeviceControlsDeviceIdFeature" classname="SpecFlowAutomation.Tests.Features._044_CreateDvdCdDeviceControlsDeviceIdFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:39:33Z" end-time="2024-11-13T20:41:08Z" duration="94.7315169">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._044_CreateDvdCdDeviceControlsDeviceIdFeature._1_Create" methodname="_1_Create" classname="_044_CreateDvdCdDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:39:33Z" end-time="2024-11-13T20:40:00Z" duration="26.863923" asserts="0" seed="378798995">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.7s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.5s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.2s)
And User selects Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("DeviceId") (0.1s)
And User enters Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("DVDSTOR\CDROM&VEN...") (0.1s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on DVD "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see text "Publish descriptors"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Publish descriptors") (0.0s)
And User should see text "Manage user group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Manage user group") (0.0s)
And User should see text "Promote changes"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Promote changes") (0.0s)
And User should see table header "Description"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Description") (0.0s)
And User should see table header "Type"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Type") (0.0s)
And User should see table header "Value"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Value") (0.0s)
And User should see table header "Environments"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Environments") (0.0s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DVDSTOR\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User selects DVD CD target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDVDCDTargetAsDevlEnvironment() (0.9s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_1000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DVDSTOR\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dvddc" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dvddc") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._044_CreateDvdCdDeviceControlsDeviceIdFeature._2_Edit" methodname="_2_Edit" classname="_044_CreateDvdCdDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:40:00Z" end-time="2024-11-13T20:40:24Z" duration="24.140487" asserts="0" seed="2054544783">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.2s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User clicks on DVD "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Description value as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("AutomationEdit") (0.2s)
And User enters Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("DVDSTOR\CDROM&VEN...") (0.2s)
And User clicks on DVD "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DVDSTOR\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DVDSTOR\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User selects DVD CD target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDVDCDTargetAsDevlEnvironment() (0.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("DeviceId") (0.0s)
And User should see Value as "DVDSTOR\CDROM&VEN_KINGSTON&PROD_DT_2000&REV_1.00"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("DVDSTOR\CDROM&VEN...") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dvddc" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dvddc") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._044_CreateDvdCdDeviceControlsDeviceIdFeature._3_Delete" methodname="_3_Delete" classname="_044_CreateDvdCdDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:40:24Z" end-time="2024-11-13T20:40:52Z" duration="27.722004" asserts="0" seed="1074587860">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.3s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User clicks on DVD "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.0s)
And User clicks on DVD "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User selects DVD CD target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDVDCDTargetAsDevlEnvironment() (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dvddc" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dvddc") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._044_CreateDvdCdDeviceControlsDeviceIdFeature._4_Discard" methodname="_4_Discard" classname="_044_CreateDvdCdDeviceControlsDeviceIdFeature" result="Passed" start-time="2024-11-13T20:40:52Z" end-time="2024-11-13T20:41:08Z" duration="16.0051029" asserts="0" seed="1463149488">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.8s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.2s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.4s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.4s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_045_CreateDvdCdDeviceControlsVID_PIDFeature" fullname="SpecFlowAutomation.Tests.Features._045_CreateDvdCdDeviceControlsVID_PIDFeature" classname="SpecFlowAutomation.Tests.Features._045_CreateDvdCdDeviceControlsVID_PIDFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:41:08Z" end-time="2024-11-13T20:42:38Z" duration="90.275486">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._045_CreateDvdCdDeviceControlsVID_PIDFeature._1_Create" methodname="_1_Create" classname="_045_CreateDvdCdDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:41:08Z" end-time="2024-11-13T20:41:34Z" duration="26.030183" asserts="0" seed="1487206027">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.3s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.1s)
And User selects Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("VID_PID") (0.1s)
And User enters Value as "0123_4567"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("0123_4567") (0.1s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on DVD "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see text "Publish descriptors"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Publish descriptors") (0.0s)
And User should see text "Manage user group"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Manage user group") (0.0s)
And User should see text "Promote changes"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Promote changes") (0.0s)
And User should see table header "Description"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Description") (0.0s)
And User should see table header "Type"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Type") (0.0s)
And User should see table header "Value"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Value") (0.0s)
And User should see table header "Environments"
-> done: UsbDeviceControlsStepDefinitions.WhenUserShouldSeeTableHeader("Environments") (0.0s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "0123_4567"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("0123_4567") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User selects DVD CD target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDVDCDTargetAsDevlEnvironment() (0.8s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Description as "Automation"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("Automation") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "0123_4567"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("0123_4567") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dvddc" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dvddc") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._045_CreateDvdCdDeviceControlsVID_PIDFeature._2_Edit" methodname="_2_Edit" classname="_045_CreateDvdCdDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:41:34Z" end-time="2024-11-13T20:41:57Z" duration="23.069541" asserts="0" seed="1410223156">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.2s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.3s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User clicks on DVD "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Description value as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("AutomationEdit") (0.2s)
And User enters Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("4567_0123") (0.1s)
And User clicks on DVD "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.1s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("4567_0123") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("4567_0123") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.2s)
And User selects DVD CD target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDVDCDTargetAsDevlEnvironment() (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Description as "AutomationEdit"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDescriptionAs("AutomationEdit") (0.0s)
And User should see Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeTypeAs("VID_PID") (0.0s)
And User should see Value as "4567_0123"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeValueAs("4567_0123") (0.0s)
And User should see Environment Label as "devl"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeEnvironmentLabelAs("devl") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dvddc" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dvddc") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._045_CreateDvdCdDeviceControlsVID_PIDFeature._3_Delete" methodname="_3_Delete" classname="_045_CreateDvdCdDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:41:57Z" end-time="2024-11-13T20:42:24Z" duration="26.834474" asserts="0" seed="338609672">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.6s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.2s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.1s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User clicks on DVD "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.1s)
And User clicks on DVD "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.3s)
And User selects DVD CD target as Devl environment
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsDVDCDTargetAsDevlEnvironment() (0.8s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (0.5s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "dvddc" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("dvddc") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._045_CreateDvdCdDeviceControlsVID_PIDFeature._4_Discard" methodname="_4_Discard" classname="_045_CreateDvdCdDeviceControlsVID_PIDFeature" result="Passed" start-time="2024-11-13T20:42:24Z" end-time="2024-11-13T20:42:38Z" duration="14.341288" asserts="0" seed="778725414">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.2s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.4s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" fullname="SpecFlowAutomation.Tests.Features._046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" classname="SpecFlowAutomation.Tests.Features._046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:42:38Z" end-time="2024-11-13T20:44:01Z" duration="82.544569">
            <test-case name="_01_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature._01_CreatePolicy" methodname="_01_CreatePolicy" classname="_046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" result="Passed" start-time="2024-11-13T20:42:38Z" end-time="2024-11-13T20:43:37Z" duration="58.33372" asserts="0" seed="2074832763">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.3s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.3s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.1s)
When User clicks on Sub Section Win32 Line-of-business App
-> done: BrowsePoliciesStepDefinitions.WhenUserClickOnSubSectionWin32Line_Of_BusinessApp() (0.2s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.0s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Input File comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Input File comments") (0.2s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User uploads a folder "InputFolder"
-> done: AssetEditorStepDefinitions.WhenUserUploadAFolder("InputFolder") (3.1s)
And User enters upload folder comment as "Input Folder comments"
-> done: AssetEditorStepDefinitions.WhenUserEntersUploadFolderCommentAs("Input Folder comm...") (0.1s)
When User clicks on "Folder Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Folder Upload") (0.1s)
And User waits for 6 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(6, "seconds") (6.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.1s)
When User edits policy details Json Editor Container for "WindowsSupersedence"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsSupersedence) (3.1s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User waits for 6 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(6, "seconds") (6.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.3s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_046_CreateAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" result="Passed" start-time="2024-11-13T20:43:37Z" end-time="2024-11-13T20:44:01Z" duration="24.210849" asserts="0" seed="292240483">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (7.5s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/windows", "AUTOMATION Policy") (2.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_047_ValidationDictaphoneDeviceControlsFeature" fullname="SpecFlowAutomation.Tests.Features._047_ValidationDictaphoneDeviceControlsFeature" classname="SpecFlowAutomation.Tests.Features._047_ValidationDictaphoneDeviceControlsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:44:01Z" end-time="2024-11-13T20:44:42Z" duration="41.483134">
            <test-case name="_1_ValidationOfDeviceId" fullname="SpecFlowAutomation.Tests.Features._047_ValidationDictaphoneDeviceControlsFeature._1_ValidationOfDeviceId" methodname="_1_ValidationOfDeviceId" classname="_047_ValidationDictaphoneDeviceControlsFeature" result="Passed" start-time="2024-11-13T20:44:01Z" end-time="2024-11-13T20:44:21Z" duration="20.651553" asserts="0" seed="1082427275">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.2s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.7s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.1s)
And User selects Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("DeviceId") (0.1s)
And User enters Value as "CDROMVENKINGSTON&PROD1000&REV100"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("CDROMVENKINGSTON&...") (0.2s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Dictaphone "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Device type error  message as "Enter a DeviceId (e.g 'USBSTOR\DISK&VEN_KINGSTON&PROD_DT6000&REV_1.00'"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDeviceTypeErrorMessageAs("Enter a DeviceId ...") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.5s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_ValidationOfVID_PID" fullname="SpecFlowAutomation.Tests.Features._047_ValidationDictaphoneDeviceControlsFeature._2_ValidationOfVID_PID" methodname="_2_ValidationOfVID_PID" classname="_047_ValidationDictaphoneDeviceControlsFeature" result="Passed" start-time="2024-11-13T20:44:21Z" end-time="2024-11-13T20:44:42Z" duration="20.831581" asserts="0" seed="997497496">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.1s)
When User clicks on "Dictaphone Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Dictaphone Device...") (0.2s)
Then User should see "Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Dictaphone Device...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Dictaph...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Dictaphone Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Dictaphone D...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.2s)
And User selects Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("VID_PID") (0.1s)
And User enters Value as "34345345345"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("34345345345") (0.1s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on Dictaphone "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Device type error  message as "Enter a VID/PID (e.g 'AB10_CD20' / 'AB10_' / '_CD20'"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDeviceTypeErrorMessageAs("Enter a VID/PID (...") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.4s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_048_ValidationDvdCdControlsFeature" fullname="SpecFlowAutomation.Tests.Features._048_ValidationDvdCdControlsFeature" classname="SpecFlowAutomation.Tests.Features._048_ValidationDvdCdControlsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:44:42Z" end-time="2024-11-13T20:45:23Z" duration="41.2488409">
            <test-case name="_1_ValidationOfDeviceId" fullname="SpecFlowAutomation.Tests.Features._048_ValidationDvdCdControlsFeature._1_ValidationOfDeviceId" methodname="_1_ValidationOfDeviceId" classname="_048_ValidationDvdCdControlsFeature" result="Passed" start-time="2024-11-13T20:44:42Z" end-time="2024-11-13T20:45:02Z" duration="20.0584339" asserts="0" seed="583546030">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.3s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.2s)
And User selects Type as "DeviceId"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("DeviceId") (0.1s)
And User enters Value as "CDROMVENKINGSTON&PROD1000&REV100"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("CDROMVENKINGSTON&...") (0.1s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on DVD "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Device type error  message as "Enter a DeviceId (e.g 'USBSTOR\DISK&VEN_KINGSTON&PROD_DT6000&REV_1.00'"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDeviceTypeErrorMessageAs("Enter a DeviceId ...") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.4s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_ValidationOfVID_PID" fullname="SpecFlowAutomation.Tests.Features._048_ValidationDvdCdControlsFeature._2_ValidationOfVID_PID" methodname="_2_ValidationOfVID_PID" classname="_048_ValidationDvdCdControlsFeature" result="Passed" start-time="2024-11-13T20:45:02Z" end-time="2024-11-13T20:45:23Z" duration="21.190407" asserts="0" seed="369060701">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
When User clicks on "DVD/CD Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("DVD/CD Device Con...") (0.2s)
Then User should see "DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("DVD/CD Device Con...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out DVD/CD ...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit DVD/CD Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit DVD/CD Devic...") (0.0s)
And User enters Description value as "Automation"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersDescriptionValueAs("Automation") (0.2s)
And User selects Type as "VID_PID"
-> done: UsbDeviceControlsStepDefinitions.GivenUserSelectsTypeAs("VID_PID") (0.1s)
And User enters Value as "34345345345"
-> done: UsbDeviceControlsStepDefinitions.GivenUserEntersValueAs("34345345345") (0.1s)
And User checks Environments devl
-> done: UsbDeviceControlsStepDefinitions.GivenUserChecksEnvironmentsDevl() (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on DVD "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Device type error  message as "Enter a VID/PID (e.g 'AB10_CD20' / 'AB10_' / '_CD20'"
-> done: UsbDeviceControlsStepDefinitions.ThenUserShouldSeeDeviceTypeErrorMessageAs("Enter a VID/PID (...") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (1.2s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_049_ValidationUSBDeviceControlsFeature" fullname="SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature" classname="SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature" total="2" passed="0" failed="2" inconclusive="0" skipped="0" result="Failed" start-time="2024-11-13T20:45:23Z" end-time="2024-11-13T20:46:09Z" duration="45.3295259">
            <test-case name="_1_ValidationOfDeviceId" fullname="SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature._1_ValidationOfDeviceId" methodname="_1_ValidationOfDeviceId" classname="_049_ValidationUSBDeviceControlsFeature" result="Failed" start-time="2024-11-13T20:45:23Z" end-time="2024-11-13T20:45:46Z" duration="22.506293" asserts="0" seed="180776831">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.6s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.2s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.0s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User enters Description value as "Automation"
-> skipped because of previous errors
And User selects Type as "DeviceId"
-> skipped because of previous errors
And User enters Value as "CDROMVENKINGSTON&PROD1000&REV100"
-> skipped because of previous errors
And User checks Environments devl
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on USB "Add" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Device type error  message as "Enter a DeviceId (e.g 'USBSTOR\DISK&VEN_KINGSTON&PROD_DT6000&REV_1.00'"
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Discard" link
-> skipped because of previous errors
When User clicks on "Discard" button
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature._1_ValidationOfDeviceId() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\ValidationUsbDeviceControls.feature:line 27</stack-trace>
              </failure>
            </test-case>
            <test-case name="_2_ValidationOfVID_PID" fullname="SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature._2_ValidationOfVID_PID" methodname="_2_ValidationOfVID_PID" classname="_049_ValidationUSBDeviceControlsFeature" result="Failed" start-time="2024-11-13T20:45:46Z" end-time="2024-11-13T20:46:09Z" duration="22.8232329" asserts="0" seed="1696805886">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.8s)
When User clicks on "USB Device Controls" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("USB Device Controls") (0.3s)
Then User should see "USB Device Controls" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("USB Device Controls") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> error: no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.1s)
Then User should see "Check out USB Device Controls" page
-> skipped because of previous errors
When User clicks on "Checkout And Edit" button
-> skipped because of previous errors
Then User should see "Edit USB Device Controls" page
-> skipped because of previous errors
And User enters Description value as "Automation"
-> skipped because of previous errors
And User selects Type as "VID_PID"
-> skipped because of previous errors
And User enters Value as "34345345345"
-> skipped because of previous errors
And User checks Environments devl
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User clicks on USB "Add" button
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Then User should see Device type error  message as "Enter a VID/PID (e.g 'AB10_CD20' / 'AB10_' / '_CD20'"
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Discard" link
-> skipped because of previous errors
When User clicks on "Discard" button
-> skipped because of previous errors
And User should see Baseline status as "IDLE"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"link text","selector":"Check out"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByLinkText(String elementText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 67
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.GivenUserClickOnLink(String linkText) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 120
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._049_ValidationUSBDeviceControlsFeature._2_ValidationOfVID_PID() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\ValidationUsbDeviceControls.feature:line 42</stack-trace>
              </failure>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_050_JdrEditorBlockPermissionFeature" fullname="SpecFlowAutomation.Tests.Features._050_JdrEditorBlockPermissionFeature" classname="SpecFlowAutomation.Tests.Features._050_JdrEditorBlockPermissionFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:46:09Z" end-time="2024-11-13T20:47:51Z" duration="101.75381">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._050_JdrEditorBlockPermissionFeature._1_Create" methodname="_1_Create" classname="_050_JdrEditorBlockPermissionFeature" result="Passed" start-time="2024-11-13T20:46:09Z" end-time="2024-11-13T20:46:39Z" duration="30.300254" asserts="0" seed="992512368">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.5s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User enters Location value as "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocationValueAs("*.AutomationLocat...") (0.2s)
And User enters Title value as "AutomationTitle"
-> done: JdrEditorStepDefinitions.GivenUserEntersTitleValueAs("AutomationTitle") (0.1s)
And User selects Permission value as "block"
-> done: JdrEditorStepDefinitions.GivenUserSelectsPermissionValueAs("block") (0.1s)
And User enters Version value as "1.0"
-> done: JdrEditorStepDefinitions.GivenUserEntersVersionValueAs("1.0") (0.1s)
And User checks Force checkbox
-> done: JdrEditorStepDefinitions.GivenUserChecksForceCheckbox() (0.1s)
And User enters Message value as "AutomationMessage"
-> done: JdrEditorStepDefinitions.GivenUserEntersMessageValueAs("AutomationMessage") (0.6s)
And User enters Locale value as "Auto"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocaleValueAs("Auto") (0.1s)
When User clicks on JDR "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.6s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (5.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._050_JdrEditorBlockPermissionFeature._2_Edit" methodname="_2_Edit" classname="_050_JdrEditorBlockPermissionFeature" result="Passed" start-time="2024-11-13T20:46:39Z" end-time="2024-11-13T20:47:08Z" duration="29.361014" asserts="0" seed="1306753028">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (12.8s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.2s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User clicks on JDR "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Location value as "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocationValueAs("*.AutomationLocat...") (0.2s)
And User enters Title value as "AutomationTitle"
-> done: JdrEditorStepDefinitions.GivenUserEntersTitleValueAs("AutomationTitle") (0.1s)
And User clicks on JDR "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.7s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._050_JdrEditorBlockPermissionFeature._3_Delete" methodname="_3_Delete" classname="_050_JdrEditorBlockPermissionFeature" result="Passed" start-time="2024-11-13T20:47:08Z" end-time="2024-11-13T20:47:35Z" duration="26.093721" asserts="0" seed="1373558412">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.2s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.3s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User clicks on JDR "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.1s)
And User clicks on JDR "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (1.4s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._050_JdrEditorBlockPermissionFeature._4_Discard" methodname="_4_Discard" classname="_050_JdrEditorBlockPermissionFeature" result="Passed" start-time="2024-11-13T20:47:35Z" end-time="2024-11-13T20:47:51Z" duration="15.998821" asserts="0" seed="301178006">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.3s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.5s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_051_JdrEditorDefaultPermissionFeature" fullname="SpecFlowAutomation.Tests.Features._051_JdrEditorDefaultPermissionFeature" classname="SpecFlowAutomation.Tests.Features._051_JdrEditorDefaultPermissionFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:47:51Z" end-time="2024-11-13T20:49:24Z" duration="93.438388">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._051_JdrEditorDefaultPermissionFeature._1_Create" methodname="_1_Create" classname="_051_JdrEditorDefaultPermissionFeature" result="Passed" start-time="2024-11-13T20:47:51Z" end-time="2024-11-13T20:48:16Z" duration="25.927404" asserts="0" seed="612010712">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.3s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.3s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.4s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User enters Location value as "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocationValueAs("*.AutomationLocat...") (0.2s)
And User enters Title value as "AutomationTitle"
-> done: JdrEditorStepDefinitions.GivenUserEntersTitleValueAs("AutomationTitle") (0.1s)
And User selects Permission value as "default"
-> done: JdrEditorStepDefinitions.GivenUserSelectsPermissionValueAs("default") (0.1s)
And User enters Version value as "1.0"
-> done: JdrEditorStepDefinitions.GivenUserEntersVersionValueAs("1.0") (0.1s)
And User checks Force checkbox
-> done: JdrEditorStepDefinitions.GivenUserChecksForceCheckbox() (0.1s)
When User clicks on JDR "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (1.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.9s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._051_JdrEditorDefaultPermissionFeature._2_Edit" methodname="_2_Edit" classname="_051_JdrEditorDefaultPermissionFeature" result="Passed" start-time="2024-11-13T20:48:16Z" end-time="2024-11-13T20:48:43Z" duration="26.139529" asserts="0" seed="751568030">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.0s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.2s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User clicks on JDR "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Location value as "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocationValueAs("*.AutomationLocat...") (0.2s)
And User enters Title value as "AutomationTitle"
-> done: JdrEditorStepDefinitions.GivenUserEntersTitleValueAs("AutomationTitle") (0.1s)
And User clicks on JDR "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.1s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._051_JdrEditorDefaultPermissionFeature._3_Delete" methodname="_3_Delete" classname="_051_JdrEditorDefaultPermissionFeature" result="Passed" start-time="2024-11-13T20:48:43Z" end-time="2024-11-13T20:49:08Z" duration="25.432046" asserts="0" seed="1444444118">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.2s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User clicks on JDR "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.1s)
And User clicks on JDR "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (1.1s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._051_JdrEditorDefaultPermissionFeature._4_Discard" methodname="_4_Discard" classname="_051_JdrEditorDefaultPermissionFeature" result="Passed" start-time="2024-11-13T20:49:08Z" end-time="2024-11-13T20:49:24Z" duration="15.939409" asserts="0" seed="2090716894">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.3s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.6s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_052_JdrEditorRunPermissionFeature" fullname="SpecFlowAutomation.Tests.Features._052_JdrEditorRunPermissionFeature" classname="SpecFlowAutomation.Tests.Features._052_JdrEditorRunPermissionFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:49:24Z" end-time="2024-11-13T20:50:56Z" duration="91.889313">
            <test-case name="_1_Create" fullname="SpecFlowAutomation.Tests.Features._052_JdrEditorRunPermissionFeature._1_Create" methodname="_1_Create" classname="_052_JdrEditorRunPermissionFeature" result="Passed" start-time="2024-11-13T20:49:24Z" end-time="2024-11-13T20:49:49Z" duration="25.130404" asserts="0" seed="206612279">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.3s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.1s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.6s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User enters Location value as "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocationValueAs("*.AutomationLocat...") (0.2s)
And User enters Title value as "AutomationTitle"
-> done: JdrEditorStepDefinitions.GivenUserEntersTitleValueAs("AutomationTitle") (0.1s)
And User selects Permission value as "run"
-> done: JdrEditorStepDefinitions.GivenUserSelectsPermissionValueAs("run") (0.1s)
And User enters Version value as "1.0"
-> done: JdrEditorStepDefinitions.GivenUserEntersVersionValueAs("1.0") (0.1s)
And User checks Force checkbox
-> done: JdrEditorStepDefinitions.GivenUserChecksForceCheckbox() (0.1s)
When User clicks on JDR "Add" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Add") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_2_Edit" fullname="SpecFlowAutomation.Tests.Features._052_JdrEditorRunPermissionFeature._2_Edit" methodname="_2_Edit" classname="_052_JdrEditorRunPermissionFeature" result="Passed" start-time="2024-11-13T20:49:49Z" end-time="2024-11-13T20:50:15Z" duration="26.11221" asserts="0" seed="1138893335">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.4s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.2s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User clicks on JDR "Edit" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Edit") (1.1s)
And User enters Location value as "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.GivenUserEntersLocationValueAs("*.AutomationLocat...") (0.2s)
And User enters Title value as "AutomationTitle"
-> done: JdrEditorStepDefinitions.GivenUserEntersTitleValueAs("AutomationTitle") (0.1s)
And User clicks on JDR "Save" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Save") (1.1s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.3s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.7s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Then User should see Location "*.AutomationLocation.com"
-> done: JdrEditorStepDefinitions.ThenUserShouldSeeLocation("*.AutomationLocat...") (0.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_3_Delete" fullname="SpecFlowAutomation.Tests.Features._052_JdrEditorRunPermissionFeature._3_Delete" methodname="_3_Delete" classname="_052_JdrEditorRunPermissionFeature" result="Passed" start-time="2024-11-13T20:50:15Z" end-time="2024-11-13T20:50:40Z" duration="25.04426" asserts="0" seed="1311320232">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.2s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.2s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.8s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
And User clicks on JDR "Delete" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Delete") (1.1s)
And User clicks on JDR "Confirm" button
-> done: EmslEditorStepDefinitions.WhenUserClicksOnEMSLButton("Confirm") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check in" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check in") (0.2s)
When User clicks on "Check in" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Check in") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Publish" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Publish") (0.6s)
When User clicks on "Publish" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Publish") (2.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.0s)
And User should see version number
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeVersionNumber() (0.0s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User clean up "jdr" history
-> done: BrowsePoliciesStepDefinitions.ThenUserCleanUpHistory("jdr") (0.0s)

]]></output>
            </test-case>
            <test-case name="_4_Discard" fullname="SpecFlowAutomation.Tests.Features._052_JdrEditorRunPermissionFeature._4_Discard" methodname="_4_Discard" classname="_052_JdrEditorRunPermissionFeature" result="Passed" start-time="2024-11-13T20:50:40Z" end-time="2024-11-13T20:50:56Z" duration="15.602439" asserts="0" seed="1375708996">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
When User clicks on "JDR Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("JDR Editor") (0.3s)
Then User should see "Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Java Deployment R...") (0.0s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Check out" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Check out") (0.3s)
Then User should see "Check out Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Check out Java De...") (0.0s)
When User clicks on "Checkout And Edit" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Checkout And Edit") (0.5s)
Then User should see "Edit Java Deployment Ruleset" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit Java Deploym...") (0.0s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Discard" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Discard") (0.2s)
When User clicks on "Discard" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Discard") (0.4s)
And User should see Baseline status as "IDLE"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("IDLE") (1.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_054_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" fullname="SpecFlowAutomation.Tests.Features._054_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" classname="SpecFlowAutomation.Tests.Features._054_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:50:56Z" end-time="2024-11-13T20:51:12Z" duration="16.383701">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._054_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_054_ExtractVerifyAndDeleteBaselinePoliciesForApplicationWindowsSupersedenceFeature" result="Passed" start-time="2024-11-13T20:50:56Z" end-time="2024-11-13T20:51:12Z" duration="16.383701" asserts="0" seed="1684451163">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (4.6s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_056_ExtractPoliciesFeature" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature" classname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature" total="10" passed="4" failed="0" inconclusive="0" skipped="6" result="Passed" start-time="2024-11-13T20:51:12Z" end-time="2024-11-13T20:52:17Z" duration="64.354562">
            <test-case name="_1_FilterExtractPolicy(&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._1_FilterExtractPolicy(&quot;10&quot;,null)" methodname="_1_FilterExtractPolicy(&quot;10&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Passed" start-time="2024-11-13T20:51:12Z" end-time="2024-11-13T20:51:27Z" duration="15.141477" asserts="0" seed="1059528771">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.3s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (2.5s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_ResetExtractPolicy(&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._2_ResetExtractPolicy(&quot;20&quot;,null)" methodname="_2_ResetExtractPolicy(&quot;20&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Passed" start-time="2024-11-13T20:51:27Z" end-time="2024-11-13T20:51:45Z" duration="17.507267" asserts="0" seed="1792106125">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (3.1s)
And User selects Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("20") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
Then User should see Records Per Page as "20"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("20") (0.1s)
When User clicks on Reset Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnResetButton() (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Search Criteria cleared
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeSearchCriteriaCleared() (0.0s)
And User should see dropdown Records Per Page as "10"
10
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeDropdownRecordsPerPageAs("10") (0.1s)

]]></output>
            </test-case>
            <test-case name="_3_SortingOrderByPolicyName(&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._3_SortingOrderByPolicyName(&quot;10&quot;,null)" methodname="_3_SortingOrderByPolicyName(&quot;10&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Passed" start-time="2024-11-13T20:51:45Z" end-time="2024-11-13T20:52:02Z" duration="16.629898" asserts="0" seed="1422438097">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.2s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (0.4s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.1s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
Then User should see Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeRecordsPerPageAs("10") (0.1s)
And User should see policies sort by "Name" in ascending order
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeInAscendingOrder("Name") (0.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Name" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Name") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see policies sort by "Name" in descending order
-> done: BrowsePoliciesStepDefinitions.WhenUserShouldSeeInDescendingOrder("Name") (0.3s)

]]></output>
            </test-case>
            <test-case name="_5_SortingOrderByDescription(&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._5_SortingOrderByDescription(&quot;10&quot;,null)" methodname="_5_SortingOrderByDescription(&quot;10&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Skipped" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:02Z" duration="1E-05" asserts="0" seed="1152870007">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;50&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;50&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z&quot;,&quot;50&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Skipped" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:02Z" duration="4E-06" asserts="0" seed="891463002">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;20&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;20&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;ZZ&quot;,&quot;20&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Skipped" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:02Z" duration="8E-06" asserts="0" seed="1100015306">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;100&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Q1&quot;,&quot;100&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Skipped" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:02Z" duration="1.1E-05" asserts="0" seed="1939771811">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;100&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;100&quot;,null)" methodname="_6_ThreeOrMoreCharsAreMandatoryForSearch(&quot;Z2&quot;,&quot;100&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Skipped" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:02Z" duration="1.4E-05" asserts="0" seed="1711522668">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_7_ResultsMatchSearchCriteria(&quot;devl&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._7_ResultsMatchSearchCriteria(&quot;devl&quot;,&quot;10&quot;,null)" methodname="_7_ResultsMatchSearchCriteria(&quot;devl&quot;,&quot;10&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Skipped" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:02Z" duration="3E-06" asserts="0" seed="2071479820">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[OneTimeSetUp: Ignored scenario
]]></output>
            </test-case>
            <test-case name="_8_VerifyPreviousNextPageNumberLinksInPagination(&quot;AUTO&quot;,&quot;10&quot;,null)" fullname="SpecFlowAutomation.Tests.Features._056_ExtractPoliciesFeature._8_VerifyPreviousNextPageNumberLinksInPagination(&quot;AUTO&quot;,&quot;10&quot;,null)" methodname="_8_VerifyPreviousNextPageNumberLinksInPagination(&quot;AUTO&quot;,&quot;10&quot;,null)" classname="_056_ExtractPoliciesFeature" result="Passed" start-time="2024-11-13T20:52:02Z" end-time="2024-11-13T20:52:17Z" duration="15.07587" asserts="0" seed="938216150">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (2.6s)
And User enters Search Criteria as "AUTO"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AUTO") (0.3s)
And User selects Records Per Page as "10"
-> done: BrowsePoliciesStepDefinitions.GivenUserSelectsRecordsPerPageAs("10") (0.2s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_058_ReleaseLogFeature" fullname="SpecFlowAutomation.Tests.Features._058_ReleaseLogFeature" classname="SpecFlowAutomation.Tests.Features._058_ReleaseLogFeature" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:52:17Z" end-time="2024-11-13T20:52:31Z" duration="14.442696">
            <test-case name="BrowseReleaseLog" fullname="SpecFlowAutomation.Tests.Features._058_ReleaseLogFeature.BrowseReleaseLog" methodname="BrowseReleaseLog" classname="_058_ReleaseLogFeature" result="Passed" start-time="2024-11-13T20:52:17Z" end-time="2024-11-13T20:52:31Z" duration="14.442696" asserts="0" seed="318151037">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.7s)
And User should see text "Release Log"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Release Log") (0.0s)
And User should see text "See what's new in ViCTOR - opens in a new tab"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("See what's new in...") (0.0s)
When User clicks "Release Log" tile
-> done: CreatePoliciesStepDefinitions.WhenUserClicksTile("Release Log") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see URL "https://dsdmoj.atlassian.net/wiki/spaces/MOJO/pages/4163535023/ViCTOR+Release+Log"
https://dsdmoj.atlassian.net/wiki/spaces/MOJO/pages/4163535023/ViCTOR+Release+Log
-> done: CreatePoliciesStepDefinitions.WhenUserShouldSeeURL("https://dsdmoj.at...") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" fullname="SpecFlowAutomation.Tests.Features._059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" classname="SpecFlowAutomation.Tests.Features._059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:52:31Z" end-time="2024-11-13T20:53:56Z" duration="84.489023">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T20:52:31Z" end-time="2024-11-13T20:53:38Z" duration="66.719436" asserts="0" seed="1247707806">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.9s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "devl LPW Test AdminTemplate"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("devl LPW Test Adm...") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "devl LPW Test AdminTemplate"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("devl LPW Test Adm...") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "devl LPW Test AdminTemplate"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl LPW Test Adm...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsAdministrativeTemplates"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsAdministra...) (1.8s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (20.2s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_059_ViewExtractAndDeleteBaselinePoliciesForAdministrativeTemplatesWindows10Feature" result="Passed" start-time="2024-11-13T20:53:38Z" end-time="2024-11-13T20:53:56Z" duration="17.769587" asserts="0" seed="1385219461">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Administrative Templates" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Administrative Te...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.3s)
When User clicks on "administrativetemplates/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("administrativetem...", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.3s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" fullname="SpecFlowAutomation.Tests.Features._060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" classname="SpecFlowAutomation.Tests.Features._060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:53:56Z" end-time="2024-11-13T20:54:53Z" duration="57.271669">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" result="Passed" start-time="2024-11-13T20:53:56Z" end-time="2024-11-13T20:54:36Z" duration="40.159207" asserts="0" seed="1052837259">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Application Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Application Confi...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User search Automation Policy "GlobalProtect Test"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("GlobalProtect Test") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "GlobalProtect Test"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("GlobalProtect Test") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "GlobalProtect Test"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("GlobalProtect Test") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.4s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSApplicationConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSApplicationCon...) (1.4s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_060_ViewExtractAndDeleteBaselinePoliciesForApplicationConfigurationsIOSFeature" result="Passed" start-time="2024-11-13T20:54:36Z" end-time="2024-11-13T20:54:53Z" duration="17.112462" asserts="0" seed="1337570231">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Application Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Application Confi...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (0.8s)
When User clicks on "applicationconfigurations/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applicationconfig...", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" classname="SpecFlowAutomation.Tests.Features._089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:54:53Z" end-time="2024-11-13T20:56:22Z" duration="88.700139">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:54:53Z" end-time="2024-11-13T20:56:03Z" duration="70.578846" asserts="0" seed="426756473">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (10.0s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (2.5s)
And User waits for 4 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(4, "seconds") (4.0s)
When User search Automation Policy "Asavie Moda"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("Asavie Moda") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "Asavie Moda"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Asavie Moda") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "Asavie Moda"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("Asavie Moda") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.2s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSApplications) (4.7s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.6s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_089_ViewExtractAndDeleteBaselinePoliciesForApplicationIOSFeature" result="Passed" start-time="2024-11-13T20:56:03Z" end-time="2024-11-13T20:56:22Z" duration="18.121293" asserts="0" seed="600442628">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.8s)
When User clicks on "applications/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/ios", "AUTOMATION Policy") (2.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" fullname="SpecFlowAutomation.Tests.Features._090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" classname="SpecFlowAutomation.Tests.Features._090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:56:22Z" end-time="2024-11-13T20:57:36Z" duration="74.299424">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:56:22Z" end-time="2024-11-13T20:57:16Z" duration="54.44455" asserts="0" seed="131714890">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.7s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.2s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (0.7s)
When User search Automation Policy "aaaayug test 0001 0002"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("aaaayug test 0001...") (1.3s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "aaaayug test 0001 0002"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("aaaayug test 0001...") (2.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (2.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "aaaayug test 0001 0002"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("aaaayug test 0001...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.0s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WebAppApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WebAppApplications) (1.5s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (7.7s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_090_ViewExtractAndDeleteBaselinePoliciesForApplicationWebAppFeature" result="Passed" start-time="2024-11-13T20:57:16Z" end-time="2024-11-13T20:57:36Z" duration="19.854874" asserts="0" seed="1175966314">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.2s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Web App" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Web App") (3.3s)
When User clicks on "applications/webapp" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/webapp", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:57:36Z" end-time="2024-11-13T20:59:17Z" duration="101.534252">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:57:36Z" end-time="2024-11-13T20:58:50Z" duration="74.114596" asserts="0" seed="846779562">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (2.8s)
When User search Automation Policy "7-Zip"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("7-Zip") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.0s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.6s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.0s)
And User should see name "7-Zip"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("7-Zip") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (1.8s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "7-Zip"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("7-Zip") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User should see name "Supersedence Group"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("Supersedence Group") (2.0s)
And User should see Supersedence Group dropdown
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeSupersedenceGroupDropdown() (0.0s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.1s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsApplications"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsApplications) (2.3s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User uploads a file "InputFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("InputFile") (3.1s)
And User enters upload comment as "Input File comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Input File comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User uploads a folder "InputFolder"
-> done: AssetEditorStepDefinitions.WhenUserUploadAFolder("InputFolder") (3.1s)
And User enters upload folder comment as "Input Folder comments"
-> done: AssetEditorStepDefinitions.WhenUserEntersUploadFolderCommentAs("Input Folder comm...") (0.1s)
When User clicks on "Folder Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Folder Upload") (0.2s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.0s)
And User uploads a new Icon "IconName"
-> done: CreatePoliciesStepDefinitions.ThenUserUploadANewIcon("IconName") (0.1s)
And User enters Icon comments as "comments for Icon"
-> done: CreatePoliciesStepDefinitions.ThenUserEnterIconCommentsAs("comments for Icon") (0.1s)
And User clicks on "Icon Upload file" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Icon Upload file") (0.2s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (5.1s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_091_ViewExtractAndDeleteBaselinePoliciesForApplicationWindowsFeature" result="Passed" start-time="2024-11-13T20:58:50Z" end-time="2024-11-13T20:59:17Z" duration="27.419656" asserts="0" seed="1674670146">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (10.8s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/windows", "AUTOMATION Policy") (2.9s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" fullname="SpecFlowAutomation.Tests.Features._092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" classname="SpecFlowAutomation.Tests.Features._092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T20:59:17Z" end-time="2024-11-13T21:00:36Z" duration="78.476666">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T20:59:17Z" end-time="2024-11-13T21:00:18Z" duration="60.307495" asserts="0" seed="921632499">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.6s)
When User search Automation Policy "MoJo - iOS - TrustedCert - devlrootCA"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("MoJo - iOS - Trus...") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (1.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "MoJo - iOS - TrustedCert - devlrootCA"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("MoJo - iOS - Trus...") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see link "MoJo - iOS - TrustedCert - devlrootCA"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("MoJo - iOS - Trus...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.2s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.1s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "IOSDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(IOSDeviceConfigur...) (2.2s)
And User waits for 10 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(10, "seconds") (10.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (8.0s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_092_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationIOSFeature" result="Passed" start-time="2024-11-13T21:00:18Z" end-time="2024-11-13T21:00:36Z" duration="18.169171" asserts="0" seed="1405142741">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.2s)
And User clicks on "iOS" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("iOS") (1.8s)
When User clicks on "deviceconfigurations/ios" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (2.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" classname="SpecFlowAutomation.Tests.Features._093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T21:00:36Z" end-time="2024-11-13T21:01:44Z" duration="68.315463">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T21:00:36Z" end-time="2024-11-13T21:01:25Z" duration="49.524132" asserts="0" seed="106611923">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.1s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (1.9s)
When User search Automation Policy "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("devl MoJO - Win10...") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.5s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("devl MoJO - Win10...") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (0.4s)
And User should see link "devl MoJO - Win10 - TrustedCert - AtosIntCA1"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("devl MoJO - Win10...") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.6s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsDeviceConfigurations"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsDeviceConf...) (1.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.1s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_093_ViewExtractAndDeleteBaselinePoliciesForDeviceConfigurationWindowsFeature" result="Passed" start-time="2024-11-13T21:01:25Z" end-time="2024-11-13T21:01:44Z" duration="18.791331" asserts="0" seed="529779924">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.5s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Device Configurations" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Device Configurat...") (0.2s)
And User clicks on "Windows 10" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows 10") (2.1s)
When User clicks on "deviceconfigurations/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("deviceconfigurati...", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.3s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" fullname="SpecFlowAutomation.Tests.Features._094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" classname="SpecFlowAutomation.Tests.Features._094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T21:01:44Z" end-time="2024-11-13T21:03:04Z" duration="79.394534">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" result="Passed" start-time="2024-11-13T21:01:44Z" end-time="2024-11-13T21:02:46Z" duration="62.020808" asserts="0" seed="2036284504">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.8s)
And User clicks on "Extract policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Extract policy") (0.1s)
And User extracts policy from "DEVL" environment
-> done: CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment("DEVL") (0.1s)
And User clicks on "Scripts" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Scripts") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (1.1s)
When User search Automation Policy "AUTOMATION-test-200224"
-> done: BrowsePoliciesStepDefinitions.WhenUserSearchAutomationPolicyInEnvironment("AUTOMATION-test-2...") (1.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "View" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("View") (0.1s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
When User clicks on "View" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("View") (0.4s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see "Extract" link
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeEditPolicy("Extract") (0.1s)
And User should see name "AUTOMATION-test-200224"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldSeeApp("AUTOMATION-test-2...") (2.0s)
And User should see text "This information is generated from the Intune policy data"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("This information ...") (0.0s)
When User clicks on "Extract" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Extract") (9.6s)
And User should see link "AUTOMATION-test-200224"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeLink("AUTOMATION-test-2...") (0.0s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Policy dropdown as "Automation-script"
-> done: PromotePoliciesStepDefinitions.ThenUserSelectsPolicyDropdownAs("Automation-script") (0.0s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (1.7s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "WindowsScripts"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(WindowsScripts) (1.9s)
And User waits for 5 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(5, "seconds") (5.0s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (5.5s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_094_ViewExtractAndDeleteBaselinePoliciesForScriptsWindowsFeature" result="Passed" start-time="2024-11-13T21:02:46Z" end-time="2024-11-13T21:03:04Z" duration="17.373726" asserts="0" seed="1400010308">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.3s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Scripts" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Scripts") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.8s)
When User clicks on "scripts/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("scripts/windows", "AUTOMATION Policy") (2.8s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.2s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (0.4s)
Then Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_097_AssetEditorDuplicateFileNamesFeature" fullname="SpecFlowAutomation.Tests.Features._097_AssetEditorDuplicateFileNamesFeature" classname="SpecFlowAutomation.Tests.Features._097_AssetEditorDuplicateFileNamesFeature" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T21:03:04Z" end-time="2024-11-13T21:04:08Z" duration="64.391167">
            <test-case name="_01_UploadAPrivateFile" fullname="SpecFlowAutomation.Tests.Features._097_AssetEditorDuplicateFileNamesFeature._01_UploadAPrivateFile" methodname="_01_UploadAPrivateFile" classname="_097_AssetEditorDuplicateFileNamesFeature" result="Passed" start-time="2024-11-13T21:03:04Z" end-time="2024-11-13T21:03:19Z" duration="15.418299" asserts="0" seed="771447208">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "DuplicateFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("DuplicateFile") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.3s)
Then User should see uploaded file "DuplicateFile" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("DuplicateFile") (0.0s)

]]></output>
            </test-case>
            <test-case name="_02_UploadADuplicatePrivateFile" fullname="SpecFlowAutomation.Tests.Features._097_AssetEditorDuplicateFileNamesFeature._02_UploadADuplicatePrivateFile" methodname="_02_UploadADuplicatePrivateFile" classname="_097_AssetEditorDuplicateFileNamesFeature" result="Passed" start-time="2024-11-13T21:03:19Z" end-time="2024-11-13T21:03:34Z" duration="14.948642" asserts="0" seed="765184272">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.1s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "DuplicateFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("DuplicateFile") (1.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
When User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 2 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(2, "seconds") (2.0s)
And User should see Duplicate file exists message "with a type of private already exists!"
-> done: AssetEditorStepDefinitions.WhenUserShouldSeeDuplicateFileExistsMessage("with a type of pr...") (0.1s)

]]></output>
            </test-case>
            <test-case name="_03_UploadAndDeleteAPublicFile" fullname="SpecFlowAutomation.Tests.Features._097_AssetEditorDuplicateFileNamesFeature._03_UploadAndDeleteAPublicFile" methodname="_03_UploadAndDeleteAPublicFile" classname="_097_AssetEditorDuplicateFileNamesFeature" result="Passed" start-time="2024-11-13T21:03:34Z" end-time="2024-11-13T21:03:52Z" duration="18.027919" asserts="0" seed="1787966215">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (11.2s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.2s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.1s)
And User uploads a file "DuplicateFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("DuplicateFile") (1.1s)
And User selects as public file
-> done: AssetEditorStepDefinitions.GivenUserSelectAsPublicFile() (0.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
When User clicks on "Back to List" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Back to List") (0.2s)
Then User should see uploaded file "DuplicateFile" in Asset editor
-> done: AssetEditorStepDefinitions.ThenIShouldSeeUploadedFileInAssetEditor("DuplicateFile") (0.0s)

]]></output>
            </test-case>
            <test-case name="_04_UploadADuplicatePublicFile" fullname="SpecFlowAutomation.Tests.Features._097_AssetEditorDuplicateFileNamesFeature._04_UploadADuplicatePublicFile" methodname="_04_UploadADuplicatePublicFile" classname="_097_AssetEditorDuplicateFileNamesFeature" result="Passed" start-time="2024-11-13T21:03:52Z" end-time="2024-11-13T21:04:08Z" duration="15.996307" asserts="0" seed="1543466759">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.1s)
And User clicks on "Asset Editor" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Asset Editor") (0.1s)
And User clicks on Devl environment
-> done: AssetEditorStepDefinitions.GivenUserClickOnDevlEnvironment() (0.2s)
When User clicks on "Upload New File" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Upload New File") (0.5s)
And User uploads a file "DuplicateFile"
-> done: AssetEditorStepDefinitions.GivenUserUploadAFile("DuplicateFile") (1.1s)
And User selects as public file
-> done: AssetEditorStepDefinitions.GivenUserSelectAsPublicFile() (0.1s)
And User enters upload comment as "Asset Name comments"
-> done: AssetEditorStepDefinitions.GivenUserEntersUploadCommentAs("Asset Name comments") (0.1s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "File Upload" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("File Upload") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User should see Duplicate file exists message "with a type of public already exists!"
-> done: AssetEditorStepDefinitions.WhenUserShouldSeeDuplicateFileExistsMessage("with a type of pu...") (0.1s)

]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature" fullname="SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature" classname="SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature" total="2" passed="0" failed="2" inconclusive="0" skipped="0" result="Failed" start-time="2024-11-13T21:04:08Z" end-time="2024-11-13T21:04:39Z" duration="31.2644069">
            <test-case name="_1_ExtractPolicy" fullname="SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature._1_ExtractPolicy" methodname="_1_ExtractPolicy" classname="_102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature" result="Failed" start-time="2024-11-13T21:04:08Z" end-time="2024-11-13T21:04:21Z" duration="12.5561969" asserts="0" seed="421694702">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[And User extracts policy from "DEVL" environment
-> error: no such element: Unable to locate element: {"method":"css selector","selector":"a[href='/extract/devl']"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception (10.0s)
And User clicks on "Applications" link
-> skipped because of previous errors
And User clicks on "Windows" link
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
When User extracts Policy "StoreTest4"
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User should see link "StoreTest4"
-> skipped because of previous errors
And User should see Baseline status as "NEW"
-> skipped because of previous errors
And User enters Policy name as "AUTOMATION"
-> skipped because of previous errors
And User selects Supersedence Group as "None"
-> skipped because of previous errors
When User clicks on "Create baseline policy" default button
-> skipped because of previous errors
Then User should see "Edit policy" page
-> skipped because of previous errors
And User should see Baseline status as "CHECKED OUT"
-> skipped because of previous errors
And User should see Json Editor Container
-> skipped because of previous errors
When User edits policy details Json Editor Container for "StoreApp"
-> skipped because of previous errors
Then User should see Autosave status as "SAVED"
-> skipped because of previous errors
And User clicks on "Home" link
-> skipped because of previous errors
And User waits for 1 "seconds"
-> skipped because of previous errors
And User clicks on "Baseline activity" tile
-> skipped because of previous errors
And User waits for 3 "seconds"
-> skipped because of previous errors
When User selects Policy "AUTOMATION Policy"
-> skipped because of previous errors
Then User should see "Policy details" page
-> skipped because of previous errors
And User should see Baseline status as "CHECKED OUT"
-> skipped because of previous errors

]]></output>
              <failure>
                <message>OpenQA.Selenium.NoSuchElementException : no such element: Unable to locate element: {"method":"css selector","selector":"a[href='/extract/devl']"}
  (Session info: MicrosoftEdge=130.0.2849.80); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception</message>
                <stack-trace>   at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse, String commandToExecute)
   at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)
   at OpenQA.Selenium.WebDriver.FindElement(String mechanism, String value)
   at SpecFlowAutomation.Tests.Pages.BasePage.ClickWebElementByCssSelector(String cssSelector) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Pages\BasePage.cs:line 75
   at SpecFlowAutomation.Tests.StepDefinitions.CreatePoliciesStepDefinitions.GivenUserExtractsPolicyFromEnvironment(String env) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\CreatePoliciesStepDefinitions.cs:line 250
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature._1_ExtractPolicy() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\ExtractDeleteBaselineStoreApp.feature:line 27</stack-trace>
              </failure>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature" result="Failed" start-time="2024-11-13T21:04:21Z" end-time="2024-11-13T21:04:39Z" duration="18.70821" asserts="0" seed="1914521301">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (9.0s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.8s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> error: The given key 'automationPolicyName' was not present in the dictionary. (0.0s)
Given User clicks on Policy actions
-> skipped because of previous errors
And User clicks on "Delete policy" link
-> skipped because of previous errors
Then User should see "Delete baseline policy" page
-> skipped because of previous errors
And User should see Baseline status as "CHECKED OUT"
-> skipped because of previous errors
When User clicks on "Delete policy" button
-> skipped because of previous errors
Then Policy should be deleted
-> skipped because of previous errors

]]></output>
              <failure>
                <message>System.Collections.Generic.KeyNotFoundException : The given key 'automationPolicyName' was not present in the dictionary.</message>
                <stack-trace>   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at SpecFlowAutomation.Tests.StepDefinitions.BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy(String policyType, String policyName) in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\StepDefinitions\BrowsePoliciesStepDefinitions.cs:line 691
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature.ScenarioCleanup()
   at SpecFlowAutomation.Tests.Features._102_ExtractAndDeleteBaselinePoliciesForStoreAppFeature._2_DeletePolicy() in C:\Users\ajn58p\source\repos\specflow-automation-tests\SpecFlowAutomation.Tests\SpecFlowAutomation.Tests\Features\ExtractDeleteBaselineStoreApp.feature:line 40</stack-trace>
              </failure>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" name="_104_CreateAndDeleteBaselinePoliciesForStoreAppFeature" fullname="SpecFlowAutomation.Tests.Features._104_CreateAndDeleteBaselinePoliciesForStoreAppFeature" classname="SpecFlowAutomation.Tests.Features._104_CreateAndDeleteBaselinePoliciesForStoreAppFeature" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" start-time="2024-11-13T21:04:39Z" end-time="2024-11-13T21:05:52Z" duration="72.640475">
            <test-case name="_1_CreatePolicy" fullname="SpecFlowAutomation.Tests.Features._104_CreateAndDeleteBaselinePoliciesForStoreAppFeature._1_CreatePolicy" methodname="_1_CreatePolicy" classname="_104_CreateAndDeleteBaselinePoliciesForStoreAppFeature" result="Passed" start-time="2024-11-13T21:04:39Z" end-time="2024-11-13T21:05:18Z" duration="38.554519" asserts="0" seed="1739920038">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.6s)
And User clicks on "Create policy" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create policy") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (0.1s)
When User clicks on "Microsoft Store app (new)" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Microsoft Store a...") (0.3s)
Then User should see "Create policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Create policy") (0.0s)
And User should see Baseline status as "NEW"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("NEW") (1.1s)
And User enters Policy name as "AUTOMATION"
-> done: BrowsePoliciesStepDefinitions.ThenUserEnterPolicyNameAs("AUTOMATION") (0.2s)
And User selects Supersedence Group as "None"
-> done: CreatePoliciesStepDefinitions.ThenuserSelectSupersedenceGroupAs("None") (0.0s)
When User clicks on "Create baseline policy" default button
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Create baseline p...") (0.3s)
Then User should see "Edit policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Edit policy") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)
And User should see Json Editor Container
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeJsonEditorContainer() (0.0s)
When User edits policy details Json Editor Container for "StoreApp"
-> done: BrowsePoliciesStepDefinitions.WhenUserEnterPolicyDetailsInJsonEditor(StoreApp) (1.8s)
Then User should see Autosave status as "SAVED"
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeeAutosaveStatusAs("SAVED") (10.1s)
And User clicks on "Home" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Home") (0.2s)
And User waits for 1 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(1, "seconds") (1.0s)
And User clicks on "Baseline activity" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Baseline activity") (6.4s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
When User selects Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserSelectPolicy("AUTOMATION Policy") (0.5s)
Then User should see "Policy details" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Policy details") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.0s)

]]></output>
            </test-case>
            <test-case name="_2_DeletePolicy" fullname="SpecFlowAutomation.Tests.Features._104_CreateAndDeleteBaselinePoliciesForStoreAppFeature._2_DeletePolicy" methodname="_2_DeletePolicy" classname="_104_CreateAndDeleteBaselinePoliciesForStoreAppFeature" result="Passed" start-time="2024-11-13T21:05:18Z" end-time="2024-11-13T21:05:52Z" duration="34.085956" asserts="0" seed="1740187852">
              <properties>
                <property name="Category" value="smoke" />
              </properties>
              <output><![CDATA[Given User navigates to "VICTOR" Url
-> done: BrowsePoliciesStepDefinitions.GivenUserNavigateToUrl("VICTOR") (8.9s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.8s)
When User clicks on "applications/windows" Policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnPolicy("applications/windows", "AUTOMATION Policy") (2.7s)
Given User clicks on Policy actions
-> done: PromotePoliciesStepDefinitions.ThenUserClickOnPolicyActions() (0.1s)
And User clicks on "Delete policy" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Delete policy") (0.1s)
Then User should see "Delete baseline policy" page
-> done: CreatePoliciesStepDefinitions.ThenUserShouldSeePage("Delete baseline p...") (0.0s)
And User should see Baseline status as "CHECKED OUT"
-> done: PromotePoliciesStepDefinitions.ThenUserShouldSeeBaselineStatusAs("CHECKED OUT") (1.1s)
When User clicks on "Delete policy" button
-> done: BrowsePoliciesStepDefinitions.ThenUserClickOnButton("Delete policy") (1.4s)
And User clicks on "Browse policies" tile
-> done: CreatePoliciesStepDefinitions.GivenUserClickOnTab("Browse policies") (0.1s)
And User clicks on "Applications" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Applications") (0.1s)
And User clicks on "Windows" link
-> done: BrowsePoliciesStepDefinitions.GivenUserClickOnLink("Windows") (6.4s)
Then User enters Search Criteria as "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.GivenUserEntersSearchCriteriaAs("AUTOMATION Policy") (0.3s)
When User clicks on Filter Button
-> done: BrowsePoliciesStepDefinitions.WhenUserClicksOnFilterButton() (0.1s)
And User waits for 3 "seconds"
-> done: BrowsePoliciesStepDefinitions.ThenUserWaitFor(3, "seconds") (3.0s)
Then User should not see policy "AUTOMATION Policy"
-> done: BrowsePoliciesStepDefinitions.ThenUserShouldNotSeePolicy("AUTOMATION Policy") (0.2s)
And Policy should be deleted
Policy Deleted
-> done: PromotePoliciesStepDefinitions.ThenPolicyShouldBeDeleted() (0.0s)

]]></output>
            </test-case>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <errors />
  </test-suite>
</test-run>